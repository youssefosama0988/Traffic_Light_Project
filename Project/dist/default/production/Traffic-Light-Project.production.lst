

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jun 01 17:38:48 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 23/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001B04                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _port_registers
    75   001B04  80                 	db	128
    76   001B05  0F                 	db	15
    77   001B06  81                 	db	129
    78   001B07  0F                 	db	15
    79   001B08  82                 	db	130
    80   001B09  0F                 	db	15
    81   001B0A  83                 	db	131
    82   001B0B  0F                 	db	15
    83   001B0C  84                 	db	132
    84   001B0D  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   001B0E  89                 	db	137
    88   001B0F  0F                 	db	15
    89   001B10  8A                 	db	138
    90   001B11  0F                 	db	15
    91   001B12  8B                 	db	139
    92   001B13  0F                 	db	15
    93   001B14  8C                 	db	140
    94   001B15  0F                 	db	15
    95   001B16  8D                 	db	141
    96   001B17  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99   001B18  92                 	db	146
   100   001B19  0F                 	db	15
   101   001B1A  93                 	db	147
   102   001B1B  0F                 	db	15
   103   001B1C  94                 	db	148
   104   001B1D  0F                 	db	15
   105   001B1E  95                 	db	149
   106   001B1F  0F                 	db	15
   107   001B20  96                 	db	150
   108   001B21  0F                 	db	15
   109                           
   110                           ;initializer for _lcd2
   111   001B22  32                 	db	50
   112   001B23  3A                 	db	58
   113   001B24  03                 	db	3
   114   001B25  0B                 	db	11
   115   001B26  13                 	db	19
   116   001B27  1B                 	db	27
   117   001B28  23                 	db	35
   118   001B29  2B                 	db	43
   119   001B2A  33                 	db	51
   120   001B2B  3B                 	db	59
   121                           
   122                           ;initializer for _lcd1
   123   001B2C  02                 	db	2
   124   001B2D  0A                 	db	10
   125   001B2E  12                 	db	18
   126   001B2F  1A                 	db	26
   127   001B30  22                 	db	34
   128   001B31  2A                 	db	42
   129                           
   130                           ;initializer for _yellow
   131   001B32  13                 	db	19
   132                           
   133                           ;initializer for _green
   134   001B33  23                 	db	35
   135                           
   136                           ;initializer for _red
   137   001B34  03                 	db	3
   138                           
   139                           	psect	nvCOMRAM
   140   000057                     __pnvCOMRAM:
   141                           	callstack 0
   142   000057                     _ret:
   143                           	callstack 0
   144   000057                     	ds	1
   145   000000                     _PORTE	set	3972
   146   000000                     _PORTD	set	3971
   147   000000                     _PORTC	set	3970
   148   000000                     _PORTB	set	3969
   149   000000                     _PORTA	set	3968
   150   000000                     _LATA	set	3977
   151   000000                     _TRISA	set	3986
   152   000000                     _TRISE	set	3990
   153   000000                     _TRISD	set	3989
   154   000000                     _TRISC	set	3988
   155   000000                     _TRISB	set	3987
   156   000000                     _LATE	set	3981
   157   000000                     _LATD	set	3980
   158   000000                     _LATC	set	3979
   159   000000                     _LATB	set	3978
   160                           
   161                           	psect	smallconst
   162   001000                     __psmallconst:
   163                           	callstack 0
   164   001000  00                 	db	0
   165   001001                     STR_2:
   166   001001  59                 	db	89	;'Y'
   167   001002  45                 	db	69	;'E'
   168   001003  4C                 	db	76	;'L'
   169   001004  4C                 	db	76	;'L'
   170   001005  4F                 	db	79	;'O'
   171   001006  57                 	db	87	;'W'
   172   001007  20                 	db	32
   173   001008  69                 	db	105	;'i'
   174   001009  73                 	db	115	;'s'
   175   00100A  20                 	db	32
   176   00100B  4F                 	db	79	;'O'
   177   00100C  4E                 	db	78	;'N'
   178   00100D  20                 	db	32
   179   00100E  00                 	db	0
   180   00100F                     STR_1:
   181   00100F  47                 	db	71	;'G'
   182   001010  72                 	db	114	;'r'
   183   001011  65                 	db	101	;'e'
   184   001012  65                 	db	101	;'e'
   185   001013  6E                 	db	110	;'n'
   186   001014  20                 	db	32
   187   001015  69                 	db	105	;'i'
   188   001016  73                 	db	115	;'s'
   189   001017  20                 	db	32
   190   001018  4F                 	db	79	;'O'
   191   001019  4E                 	db	78	;'N'
   192   00101A  20                 	db	32
   193   00101B  00                 	db	0
   194   00101C                     STR_3:
   195   00101C  52                 	db	82	;'R'
   196   00101D  45                 	db	69	;'E'
   197   00101E  44                 	db	68	;'D'
   198   00101F  20                 	db	32
   199   001020  69                 	db	105	;'i'
   200   001021  73                 	db	115	;'s'
   201   001022  20                 	db	32
   202   001023  4F                 	db	79	;'O'
   203   001024  4E                 	db	78	;'N'
   204   001025  20                 	db	32
   205   001026  00                 	db	0
   206   001027  00                 	db	0	; dummy byte at the end
   207   000000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211   001A9A                     __pcinit:
   212                           	callstack 0
   213   001A9A                     start_initialization:
   214                           	callstack 0
   215   001A9A                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Initialize objects allocated to COMRAM (49 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220   001A9A  0E04               	movlw	low __pidataCOMRAM
   221   001A9C  6EF6               	movwf	tblptrl,c
   222   001A9E  0E1B               	movlw	high __pidataCOMRAM
   223   001AA0  6EF7               	movwf	tblptrh,c
   224   001AA2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225   001AA4  6EF8               	movwf	tblptru,c
   226   001AA6  EE00  F001         	lfsr	0,__pdataCOMRAM
   227   001AAA  EE10 F031          	lfsr	1,49
   228   001AAE                     copy_data0:
   229   001AAE  0009               	tblrd		*+
   230   001AB0  CFF5 FFEE          	movff	tablat,postinc0
   231   001AB4  50E5               	movf	postdec1,w,c
   232   001AB6  50E1               	movf	fsr1l,w,c
   233   001AB8  E1FA               	bnz	copy_data0
   234                           
   235                           ; Clear objects allocated to COMRAM (9 bytes)
   236   001ABA  EE00  F04E         	lfsr	0,__pbssCOMRAM
   237   001ABE  0E09               	movlw	9
   238   001AC0                     clear_0:
   239   001AC0  6AEE               	clrf	postinc0,c
   240   001AC2  06E8               	decf	wreg,f,c
   241   001AC4  E1FD               	bnz	clear_0
   242   001AC6                     end_of_initialization:
   243                           	callstack 0
   244   001AC6                     __end_of__initialization:
   245                           	callstack 0
   246   001AC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   247   001AC8  6EF8               	movwf	tblptru,c
   248   001ACA  0100               	movlb	0
   249   001ACC  EF14  F008         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMRAM
   252   00004E                     __pbssCOMRAM:
   253                           	callstack 0
   254   00004E                     _lcd_counter:
   255                           	callstack 0
   256   00004E                     	ds	1
   257   00004F                     relay_toggle@F2899:
   258                           	callstack 0
   259   00004F                     	ds	1
   260   000050                     relay_turn_off@F2894:
   261                           	callstack 0
   262   000050                     	ds	1
   263   000051                     relay_turn_on@F2889:
   264                           	callstack 0
   265   000051                     	ds	1
   266   000052                     relay_initialize@F2884:
   267                           	callstack 0
   268   000052                     	ds	1
   269   000053                     led_toggle@F2903:
   270                           	callstack 0
   271   000053                     	ds	1
   272   000054                     led_turn_off@F2898:
   273                           	callstack 0
   274   000054                     	ds	1
   275   000055                     led_turn_on@F2893:
   276                           	callstack 0
   277   000055                     	ds	1
   278   000056                     led_initialize@F2888:
   279                           	callstack 0
   280   000056                     	ds	1
   281                           
   282                           	psect	dataCOMRAM
   283   000001                     __pdataCOMRAM:
   284                           	callstack 0
   285   000001                     _port_registers:
   286                           	callstack 0
   287   000001                     	ds	10
   288   00000B                     _lat_registers:
   289                           	callstack 0
   290   00000B                     	ds	10
   291   000015                     _tris_registers:
   292                           	callstack 0
   293   000015                     	ds	10
   294   00001F                     _lcd2:
   295                           	callstack 0
   296   00001F                     	ds	10
   297   000029                     _lcd1:
   298                           	callstack 0
   299   000029                     	ds	6
   300   00002F                     _yellow:
   301                           	callstack 0
   302   00002F                     	ds	1
   303   000030                     _green:
   304                           	callstack 0
   305   000030                     	ds	1
   306   000031                     _red:
   307                           	callstack 0
   308   000031                     	ds	1
   309                           
   310                           	psect	cstackCOMRAM
   311   000032                     __pcstackCOMRAM:
   312                           	callstack 0
   313   000032                     gpio_pin_direction_initialize@pin:
   314                           	callstack 0
   315   000032                     gpio_pin_write_logic@pin:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x0
   319   000032                     	ds	1
   320   000033                     ??_gpio_pin_direction_initialize:
   321   000033                     gpio_pin_write_logic@logic:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x1
   325   000033                     	ds	1
   326   000034                     ??_gpio_pin_write_logic:
   327                           
   328                           ; 1 bytes @ 0x2
   329   000034                     	ds	4
   330   000038                     gpio_pin_direction_initialize@ret:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x6
   334   000038                     	ds	1
   335   000039                     led_initialize@led:
   336                           	callstack 0
   337   000039                     gpio_pin_write_logic@ret:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x7
   341   000039                     	ds	1
   342   00003A                     ??_led_initialize:
   343   00003A                     lcd_send_4bits@lcd:
   344                           	callstack 0
   345   00003A                     lcd_4bits_send_enable_signal@lcd:
   346                           	callstack 0
   347   00003A                     lcd_8bits_send_enable_signal@lcd:
   348                           	callstack 0
   349   00003A                     led_turn_on@led:
   350                           	callstack 0
   351   00003A                     led_turn_off@led:
   352                           	callstack 0
   353   00003A                     gpio_pin_direction_initialize_write@pin:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x8
   357   00003A                     	ds	1
   358   00003B                     ??_gpio_pin_direction_initialize_write:
   359   00003B                     ??_led_turn_on:
   360   00003B                     ??_led_turn_off:
   361   00003B                     lcd_send_4bits@data_command:
   362                           	callstack 0
   363   00003B                     lcd_4bits_send_enable_signal@ret:
   364                           	callstack 0
   365   00003B                     lcd_8bits_send_enable_signal@ret:
   366                           	callstack 0
   367   00003B                     led_initialize@ret:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x9
   371   00003B                     	ds	1
   372   00003C                     lcd_8bit_send_command@lcd:
   373                           	callstack 0
   374   00003C                     lcd_send_4bits@ret:
   375                           	callstack 0
   376   00003C                     led_initialize@pin:
   377                           	callstack 0
   378   00003C                     led_turn_on@ret:
   379                           	callstack 0
   380   00003C                     led_turn_off@ret:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xA
   384   00003C                     	ds	1
   385   00003D                     lcd_4bit_send_command@lcd:
   386                           	callstack 0
   387   00003D                     lcd_4bit_send_char_data@lcd:
   388                           	callstack 0
   389   00003D                     lcd_8bit_send_command@command:
   390                           	callstack 0
   391   00003D                     led_turn_on@pin:
   392                           	callstack 0
   393   00003D                     led_turn_off@pin:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xB
   397   00003D                     	ds	1
   398   00003E                     ??_lcd_8bit_send_command:
   399   00003E                     lcd_4bit_send_command@command:
   400                           	callstack 0
   401   00003E                     lcd_4bit_send_char_data@data:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xC
   405   00003E                     	ds	1
   406   00003F                     lcd_4bit_send_command@ret:
   407                           	callstack 0
   408   00003F                     lcd_4bit_send_char_data@ret:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xD
   412   00003F                     	ds	1
   413   000040                     lcd_4bit_send_string@lcd:
   414                           	callstack 0
   415   000040                     lcd_8bit_send_command@ret:
   416                           	callstack 0
   417   000040                     lcd_4bits_set_cursor@lcd:
   418                           	callstack 0
   419   000040                     gpio_pin_direction_initialize_write@ret:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0xE
   423   000040                     	ds	1
   424   000041                     lcd_4bit_initialize@lcd:
   425                           	callstack 0
   426   000041                     lcd_4bit_send_string@data:
   427                           	callstack 0
   428   000041                     lcd_8bit_send_command@l_pin_counter:
   429                           	callstack 0
   430   000041                     lcd_4bits_set_cursor@row:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0xF
   434   000041                     	ds	1
   435   000042                     ??_lcd_4bit_initialize:
   436   000042                     lcd_4bit_send_string@ret:
   437                           	callstack 0
   438   000042                     lcd_8bit_initialize@lcd:
   439                           	callstack 0
   440   000042                     lcd_4bits_set_cursor@column:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x10
   444   000042                     	ds	1
   445   000043                     ??_lcd_4bits_set_cursor:
   446   000043                     ??_lcd_8bit_initialize:
   447   000043                     lcd_4bit_initialize@l_counter:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x11
   451   000043                     	ds	1
   452   000044                     lcd_4bit_initialize@ret:
   453                           	callstack 0
   454   000044                     lcd_8bit_initialize@l_counter:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x12
   458   000044                     	ds	1
   459   000045                     lcd_8bit_initialize@ret:
   460                           	callstack 0
   461   000045                     lcd_4bits_set_cursor@ret:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x13
   465   000045                     	ds	1
   466   000046                     lcd_4bit_send_string_pos@lcd:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x14
   470   000046                     	ds	1
   471   000047                     lcd_4bit_send_string_pos@row:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x15
   475   000047                     	ds	1
   476   000048                     lcd_4bit_send_string_pos@column:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x16
   480   000048                     	ds	1
   481   000049                     lcd_4bit_send_string_pos@data:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x17
   485   000049                     	ds	1
   486   00004A                     lcd_4bit_send_string_pos@ret:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x18
   490   00004A                     	ds	1
   491   00004B                     ??_main:
   492                           
   493                           ; 1 bytes @ 0x19
   494   00004B                     	ds	2
   495   00004D                     main@program:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x1B
   499   00004D                     	ds	1
   500                           
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 14 in file "application.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  program         1   27[COMRAM] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  2  441[None  ] int 
   513 ;; Registers used:
   514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;Total ram usage:        3 bytes
   525 ;; Hardware stack levels required when called: 5
   526 ;; This function calls:
   527 ;;		_application_initialize
   528 ;;		_lcd_4bit_send_command
   529 ;;		_lcd_4bit_send_string_pos
   530 ;;		_led_turn_off
   531 ;;		_led_turn_on
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538   001028                     __ptext0:
   539                           	callstack 0
   540   001028                     _main:
   541                           	callstack 26
   542   001028                     
   543                           ;application.c: 15:     application_initialize();
   544   001028  EC68  F00D         	call	_application_initialize	;wreg free
   545   00102C                     l2426:
   546                           
   547                           ;application.c: 16:     uint8 program =0;
   548   00102C  0E00               	movlw	0
   549   00102E  6E4D               	movwf	main@program^0,c
   550   001030                     l2428:
   551                           
   552                           ;application.c: 19:         if(0 == program){
   553   001030  504D               	movf	main@program^0,w,c
   554   001032  A4D8               	btfss	status,2,c
   555   001034  EF1E  F008         	goto	u1471
   556   001038  EF20  F008         	goto	u1470
   557   00103C                     u1471:
   558   00103C  EF4A  F008         	goto	l2440
   559   001040                     u1470:
   560   001040                     
   561                           ;application.c: 20:             ret = lcd_4bit_send_command(&lcd1 , 0x01);
   562   001040  0E29               	movlw	low _lcd1
   563   001042  6E3D               	movwf	lcd_4bit_send_command@lcd^0,c
   564   001044  0E01               	movlw	1
   565   001046  6E3E               	movwf	lcd_4bit_send_command@command^0,c
   566   001048  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
   567   00104C  6E57               	movwf	_ret^0,c
   568                           
   569                           ;application.c: 21:             ret = led_turn_on(&green);
   570   00104E  0E30               	movlw	low _green
   571   001050  6E3A               	movwf	led_turn_on@led^0,c
   572   001052  ECD2  F00B         	call	_led_turn_on	;wreg free
   573   001056  6E57               	movwf	_ret^0,c
   574   001058                     
   575                           ;application.c: 22:             ret = lcd_4bit_send_string_pos(&lcd1 ,1,3 ,"Green is ON 
      +                          ");
   576   001058  0E29               	movlw	low _lcd1
   577   00105A  6E46               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   578   00105C  0E01               	movlw	1
   579   00105E  6E47               	movwf	lcd_4bit_send_string_pos@row^0,c
   580   001060  0E03               	movlw	3
   581   001062  6E48               	movwf	lcd_4bit_send_string_pos@column^0,c
   582   001064  0E0F               	movlw	low STR_1
   583   001066  6E49               	movwf	lcd_4bit_send_string_pos@data^0,c
   584   001068  EC2F  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   585   00106C  6E57               	movwf	_ret^0,c
   586   00106E                     
   587                           ;application.c: 23:             _delay((unsigned long)((5000)*(8000000/4000.0)));
   588   00106E  0E33               	movlw	51
   589   001070  6E4C               	movwf	(??_main+1)^0,c
   590   001072  0EBB               	movlw	187
   591   001074  6E4B               	movwf	??_main^0,c
   592   001076  0EE0               	movlw	224
   593   001078                     u1507:
   594   001078  2EE8               	decfsz	wreg,f,c
   595   00107A  D7FE               	bra	u1507
   596   00107C  2E4B               	decfsz	??_main^0,f,c
   597   00107E  D7FC               	bra	u1507
   598   001080  2E4C               	decfsz	(??_main+1)^0,f,c
   599   001082  D7FA               	bra	u1507
   600   001084                     
   601                           ;application.c: 24:             ret = led_turn_off(&green);
   602   001084  0E30               	movlw	low _green
   603   001086  6E3A               	movwf	led_turn_off@led^0,c
   604   001088  EC0C  F00C         	call	_led_turn_off	;wreg free
   605   00108C  6E57               	movwf	_ret^0,c
   606   00108E                     l2438:
   607                           
   608                           ;application.c: 25:             program++;
   609   00108E  2A4D               	incf	main@program^0,f,c
   610                           
   611                           ;application.c: 26:         }
   612   001090  EF18  F008         	goto	l2428
   613   001094                     l2440:
   614   001094  044D               	decf	main@program^0,w,c
   615   001096  A4D8               	btfss	status,2,c
   616   001098  EF50  F008         	goto	u1481
   617   00109C  EF52  F008         	goto	u1480
   618   0010A0                     u1481:
   619   0010A0  EF7C  F008         	goto	l2452
   620   0010A4                     u1480:
   621   0010A4                     
   622                           ;application.c: 29:             ret = lcd_4bit_send_command(&lcd1 , 0x01);
   623   0010A4  0E29               	movlw	low _lcd1
   624   0010A6  6E3D               	movwf	lcd_4bit_send_command@lcd^0,c
   625   0010A8  0E01               	movlw	1
   626   0010AA  6E3E               	movwf	lcd_4bit_send_command@command^0,c
   627   0010AC  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
   628   0010B0  6E57               	movwf	_ret^0,c
   629                           
   630                           ;application.c: 30:             ret = led_turn_on(&yellow);
   631   0010B2  0E2F               	movlw	low _yellow
   632   0010B4  6E3A               	movwf	led_turn_on@led^0,c
   633   0010B6  ECD2  F00B         	call	_led_turn_on	;wreg free
   634   0010BA  6E57               	movwf	_ret^0,c
   635   0010BC                     
   636                           ;application.c: 31:             ret = lcd_4bit_send_string_pos(&lcd1 ,1,3 ,"YELLOW is ON
      +                           ");
   637   0010BC  0E29               	movlw	low _lcd1
   638   0010BE  6E46               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   639   0010C0  0E01               	movlw	1
   640   0010C2  6E47               	movwf	lcd_4bit_send_string_pos@row^0,c
   641   0010C4  0E03               	movlw	3
   642   0010C6  6E48               	movwf	lcd_4bit_send_string_pos@column^0,c
   643   0010C8  0E01               	movlw	low STR_2
   644   0010CA  6E49               	movwf	lcd_4bit_send_string_pos@data^0,c
   645   0010CC  EC2F  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   646   0010D0  6E57               	movwf	_ret^0,c
   647   0010D2                     
   648                           ;application.c: 32:             _delay((unsigned long)((2000)*(8000000/4000.0)));
   649   0010D2  0E15               	movlw	21
   650   0010D4  6E4C               	movwf	(??_main+1)^0,c
   651   0010D6  0E4B               	movlw	75
   652   0010D8  6E4B               	movwf	??_main^0,c
   653   0010DA  0EBE               	movlw	190
   654   0010DC                     u1517:
   655   0010DC  2EE8               	decfsz	wreg,f,c
   656   0010DE  D7FE               	bra	u1517
   657   0010E0  2E4B               	decfsz	??_main^0,f,c
   658   0010E2  D7FC               	bra	u1517
   659   0010E4  2E4C               	decfsz	(??_main+1)^0,f,c
   660   0010E6  D7FA               	bra	u1517
   661   0010E8  D000               	nop2	
   662   0010EA                     
   663                           ;application.c: 33:             ret = led_turn_off(&yellow);
   664   0010EA  0E2F               	movlw	low _yellow
   665   0010EC  6E3A               	movwf	led_turn_off@led^0,c
   666   0010EE  EC0C  F00C         	call	_led_turn_off	;wreg free
   667   0010F2  6E57               	movwf	_ret^0,c
   668   0010F4  EF47  F008         	goto	l2438
   669   0010F8                     l2452:
   670   0010F8  0E02               	movlw	2
   671   0010FA  184D               	xorwf	main@program^0,w,c
   672   0010FC  A4D8               	btfss	status,2,c
   673   0010FE  EF83  F008         	goto	u1491
   674   001102  EF85  F008         	goto	u1490
   675   001106                     u1491:
   676   001106  EFAF  F008         	goto	l444
   677   00110A                     u1490:
   678   00110A                     
   679                           ;application.c: 37:             ret = lcd_4bit_send_command(&lcd1 , 0x01);
   680   00110A  0E29               	movlw	low _lcd1
   681   00110C  6E3D               	movwf	lcd_4bit_send_command@lcd^0,c
   682   00110E  0E01               	movlw	1
   683   001110  6E3E               	movwf	lcd_4bit_send_command@command^0,c
   684   001112  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
   685   001116  6E57               	movwf	_ret^0,c
   686                           
   687                           ;application.c: 38:             ret = led_turn_on(&red);
   688   001118  0E31               	movlw	low _red
   689   00111A  6E3A               	movwf	led_turn_on@led^0,c
   690   00111C  ECD2  F00B         	call	_led_turn_on	;wreg free
   691   001120  6E57               	movwf	_ret^0,c
   692   001122                     
   693                           ;application.c: 39:             ret = lcd_4bit_send_string_pos(&lcd1 ,1,3 ,"RED is ON ")
      +                          ;
   694   001122  0E29               	movlw	low _lcd1
   695   001124  6E46               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   696   001126  0E01               	movlw	1
   697   001128  6E47               	movwf	lcd_4bit_send_string_pos@row^0,c
   698   00112A  0E03               	movlw	3
   699   00112C  6E48               	movwf	lcd_4bit_send_string_pos@column^0,c
   700   00112E  0E1C               	movlw	low STR_3
   701   001130  6E49               	movwf	lcd_4bit_send_string_pos@data^0,c
   702   001132  EC2F  F00D         	call	_lcd_4bit_send_string_pos	;wreg free
   703   001136  6E57               	movwf	_ret^0,c
   704   001138                     
   705                           ;application.c: 40:             _delay((unsigned long)((4000)*(8000000/4000.0)));
   706   001138  0E29               	movlw	41
   707   00113A  6E4C               	movwf	(??_main+1)^0,c
   708   00113C  0E96               	movlw	150
   709   00113E  6E4B               	movwf	??_main^0,c
   710   001140  0E7F               	movlw	127
   711   001142                     u1527:
   712   001142  2EE8               	decfsz	wreg,f,c
   713   001144  D7FE               	bra	u1527
   714   001146  2E4B               	decfsz	??_main^0,f,c
   715   001148  D7FC               	bra	u1527
   716   00114A  2E4C               	decfsz	(??_main+1)^0,f,c
   717   00114C  D7FA               	bra	u1527
   718   00114E  0000               	nop	
   719   001150                     
   720                           ;application.c: 41:             ret = led_turn_off(&red);
   721   001150  0E31               	movlw	low _red
   722   001152  6E3A               	movwf	led_turn_off@led^0,c
   723   001154  EC0C  F00C         	call	_led_turn_off	;wreg free
   724   001158  6E57               	movwf	_ret^0,c
   725   00115A  EF16  F008         	goto	l2426
   726   00115E                     l444:
   727   00115E  EF18  F008         	goto	l2428
   728   001162  EF00  F000         	goto	start
   729   001166                     __end_of_main:
   730                           	callstack 0
   731                           
   732 ;; *************** function _led_turn_on *****************
   733 ;; Defined at:
   734 ;;		line 32 in file "ECU_Layer/LED/ecu_led.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  led             1    8[COMRAM] PTR const struct .
   737 ;;		 -> yellow(1), green(1), red(1), 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  pin             1   11[COMRAM] struct .
   740 ;;  ret             1   10[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   750 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;Total ram usage:        4 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 1
   757 ;; This function calls:
   758 ;;		_gpio_pin_write_logic
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text1
   765   0017A4                     __ptext1:
   766                           	callstack 0
   767   0017A4                     _led_turn_on:
   768                           	callstack 29
   769   0017A4                     
   770                           ;ECU_Layer/LED/ecu_led.c: 33:     Std_ReturnType ret = (Std_ReturnType)0x01;
   771   0017A4  0E01               	movlw	1
   772   0017A6  6E3C               	movwf	led_turn_on@ret^0,c
   773                           
   774                           ;ECU_Layer/LED/ecu_led.c: 35:     if(((void*)0) == led){
   775   0017A8  503A               	movf	led_turn_on@led^0,w,c
   776   0017AA  A4D8               	btfss	status,2,c
   777   0017AC  EFDA  F00B         	goto	u1281
   778   0017B0  EFDC  F00B         	goto	u1280
   779   0017B4                     u1281:
   780   0017B4  EFE0  F00B         	goto	l216
   781   0017B8                     u1280:
   782   0017B8                     
   783                           ;ECU_Layer/LED/ecu_led.c: 36:         ret = (Std_ReturnType)0x00;
   784   0017B8  0E00               	movlw	0
   785   0017BA  6E3C               	movwf	led_turn_on@ret^0,c
   786                           
   787                           ;ECU_Layer/LED/ecu_led.c: 37:     }
   788   0017BC  EF0A  F00C         	goto	l2248
   789   0017C0                     l216:
   790                           
   791                           ;ECU_Layer/LED/ecu_led.c: 39:         pin_confg_t pin = {.port = led->port , .pin = led-
      +                          >pin , .direction = OUTPUT , .logic = led->status};
   792   0017C0  C055  F03D         	movff	led_turn_on@F2893,led_turn_on@pin
   793   0017C4  503A               	movf	led_turn_on@led^0,w,c
   794   0017C6  6ED9               	movwf	fsr2l,c
   795   0017C8  6ADA               	clrf	fsr2h,c
   796   0017CA  50DF               	movf	223,w,c
   797   0017CC  0B0F               	andlw	15
   798   0017CE  6E3B               	movwf	??_led_turn_on^0,c
   799   0017D0  503D               	movf	led_turn_on@pin^0,w,c
   800   0017D2  183B               	xorwf	??_led_turn_on^0,w,c
   801   0017D4  0BF8               	andlw	-8
   802   0017D6  183B               	xorwf	??_led_turn_on^0,w,c
   803   0017D8  6E3D               	movwf	led_turn_on@pin^0,c
   804   0017DA  503A               	movf	led_turn_on@led^0,w,c
   805   0017DC  6ED9               	movwf	fsr2l,c
   806   0017DE  6ADA               	clrf	fsr2h,c
   807   0017E0  38DF               	swapf	223,w,c
   808   0017E2  0B07               	andlw	7
   809   0017E4  6E3B               	movwf	??_led_turn_on^0,c
   810   0017E6  463B               	rlncf	??_led_turn_on^0,f,c
   811   0017E8  463B               	rlncf	??_led_turn_on^0,f,c
   812   0017EA  463B               	rlncf	??_led_turn_on^0,f,c
   813   0017EC  503D               	movf	led_turn_on@pin^0,w,c
   814   0017EE  183B               	xorwf	??_led_turn_on^0,w,c
   815   0017F0  0BC7               	andlw	-57
   816   0017F2  183B               	xorwf	??_led_turn_on^0,w,c
   817   0017F4  6E3D               	movwf	led_turn_on@pin^0,c
   818   0017F6  9C3D               	bcf	led_turn_on@pin^0,6,c
   819   0017F8  503A               	movf	led_turn_on@led^0,w,c
   820   0017FA  6ED9               	movwf	fsr2l,c
   821   0017FC  6ADA               	clrf	fsr2h,c
   822   0017FE  AEDF               	btfss	indf2,7,c
   823   001800  D002               	bra	u1295
   824   001802  8E3D               	bsf	led_turn_on@pin^0,7,c
   825   001804  D001               	bra	u1297
   826   001806                     u1295:
   827   001806  9E3D               	bcf	led_turn_on@pin^0,7,c
   828   001808                     u1297:
   829   001808                     
   830                           ;ECU_Layer/LED/ecu_led.c: 40:         gpio_pin_write_logic(&pin,HIGH);
   831   001808  0E3D               	movlw	low led_turn_on@pin
   832   00180A  6E32               	movwf	gpio_pin_write_logic@pin^0,c
   833   00180C  0E01               	movlw	1
   834   00180E  6E33               	movwf	gpio_pin_write_logic@logic^0,c
   835   001810  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
   836   001814                     l2248:
   837                           
   838                           ;ECU_Layer/LED/ecu_led.c: 42:     return ret;
   839   001814  503C               	movf	led_turn_on@ret^0,w,c
   840   001816  0012               	return		;funcret
   841   001818                     __end_of_led_turn_on:
   842                           	callstack 0
   843                           
   844 ;; *************** function _led_turn_off *****************
   845 ;; Defined at:
   846 ;;		line 52 in file "ECU_Layer/LED/ecu_led.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  led             1    8[COMRAM] PTR const struct .
   849 ;;		 -> yellow(1), green(1), red(1), 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  pin             1   11[COMRAM] struct .
   852 ;;  ret             1   10[COMRAM] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      unsigned char 
   855 ;; Registers used:
   856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   862 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;Total ram usage:        4 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 1
   869 ;; This function calls:
   870 ;;		_gpio_pin_write_logic
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text2
   877   001818                     __ptext2:
   878                           	callstack 0
   879   001818                     _led_turn_off:
   880                           	callstack 29
   881   001818                     
   882                           ;ECU_Layer/LED/ecu_led.c: 55:     if(((void*)0) == led){
   883   001818  503A               	movf	led_turn_off@led^0,w,c
   884   00181A  A4D8               	btfss	status,2,c
   885   00181C  EF12  F00C         	goto	u1301
   886   001820  EF14  F00C         	goto	u1300
   887   001824                     u1301:
   888   001824  EF18  F00C         	goto	l223
   889   001828                     u1300:
   890   001828                     
   891                           ;ECU_Layer/LED/ecu_led.c: 56:         ret = (Std_ReturnType)0x00;
   892   001828  0E00               	movlw	0
   893   00182A  6E3C               	movwf	led_turn_off@ret^0,c
   894                           
   895                           ;ECU_Layer/LED/ecu_led.c: 57:     }
   896   00182C  EF43  F00C         	goto	l2264
   897   001830                     l223:
   898                           
   899                           ;ECU_Layer/LED/ecu_led.c: 59:         pin_confg_t pin = {.port = led->port , .pin = led-
      +                          >pin , .direction = OUTPUT , .logic = led->status};
   900   001830  C054  F03D         	movff	led_turn_off@F2898,led_turn_off@pin
   901   001834  503A               	movf	led_turn_off@led^0,w,c
   902   001836  6ED9               	movwf	fsr2l,c
   903   001838  6ADA               	clrf	fsr2h,c
   904   00183A  50DF               	movf	223,w,c
   905   00183C  0B0F               	andlw	15
   906   00183E  6E3B               	movwf	??_led_turn_off^0,c
   907   001840  503D               	movf	led_turn_off@pin^0,w,c
   908   001842  183B               	xorwf	??_led_turn_off^0,w,c
   909   001844  0BF8               	andlw	-8
   910   001846  183B               	xorwf	??_led_turn_off^0,w,c
   911   001848  6E3D               	movwf	led_turn_off@pin^0,c
   912   00184A  503A               	movf	led_turn_off@led^0,w,c
   913   00184C  6ED9               	movwf	fsr2l,c
   914   00184E  6ADA               	clrf	fsr2h,c
   915   001850  38DF               	swapf	223,w,c
   916   001852  0B07               	andlw	7
   917   001854  6E3B               	movwf	??_led_turn_off^0,c
   918   001856  463B               	rlncf	??_led_turn_off^0,f,c
   919   001858  463B               	rlncf	??_led_turn_off^0,f,c
   920   00185A  463B               	rlncf	??_led_turn_off^0,f,c
   921   00185C  503D               	movf	led_turn_off@pin^0,w,c
   922   00185E  183B               	xorwf	??_led_turn_off^0,w,c
   923   001860  0BC7               	andlw	-57
   924   001862  183B               	xorwf	??_led_turn_off^0,w,c
   925   001864  6E3D               	movwf	led_turn_off@pin^0,c
   926   001866  9C3D               	bcf	led_turn_off@pin^0,6,c
   927   001868  503A               	movf	led_turn_off@led^0,w,c
   928   00186A  6ED9               	movwf	fsr2l,c
   929   00186C  6ADA               	clrf	fsr2h,c
   930   00186E  AEDF               	btfss	indf2,7,c
   931   001870  D002               	bra	u1315
   932   001872  8E3D               	bsf	led_turn_off@pin^0,7,c
   933   001874  D001               	bra	u1317
   934   001876                     u1315:
   935   001876  9E3D               	bcf	led_turn_off@pin^0,7,c
   936   001878                     u1317:
   937   001878                     
   938                           ;ECU_Layer/LED/ecu_led.c: 60:             ret = gpio_pin_write_logic(&pin,LOW);
   939   001878  0E3D               	movlw	low led_turn_off@pin
   940   00187A  6E32               	movwf	gpio_pin_write_logic@pin^0,c
   941   00187C  0E00               	movlw	0
   942   00187E  6E33               	movwf	gpio_pin_write_logic@logic^0,c
   943   001880  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
   944   001884  6E3C               	movwf	led_turn_off@ret^0,c
   945   001886                     l2264:
   946                           
   947                           ;ECU_Layer/LED/ecu_led.c: 62:     return ret;
   948   001886  503C               	movf	led_turn_off@ret^0,w,c
   949   001888  0012               	return		;funcret
   950   00188A                     __end_of_led_turn_off:
   951                           	callstack 0
   952                           
   953 ;; *************** function _lcd_4bit_send_string_pos *****************
   954 ;; Defined at:
   955 ;;		line 104 in file "ECU_Layer/LCD/lcd.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  lcd             1   20[COMRAM] PTR const struct .
   958 ;;		 -> lcd1(6), 
   959 ;;  row             1   21[COMRAM] unsigned char 
   960 ;;  column          1   22[COMRAM] unsigned char 
   961 ;;  data            1   23[COMRAM] PTR unsigned char 
   962 ;;		 -> STR_3(11), STR_2(14), STR_1(13), 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  ret             1   24[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      unsigned char 
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:        5 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 4
   981 ;; This function calls:
   982 ;;		_lcd_4bit_send_string
   983 ;;		_lcd_4bits_set_cursor
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text3
   990   001A5E                     __ptext3:
   991                           	callstack 0
   992   001A5E                     _lcd_4bit_send_string_pos:
   993                           	callstack 26
   994   001A5E                     
   995                           ;ECU_Layer/LCD/lcd.c: 107:     if(((void*)0) == lcd ){
   996   001A5E  5046               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
   997   001A60  A4D8               	btfss	status,2,c
   998   001A62  EF35  F00D         	goto	u1251
   999   001A66  EF37  F00D         	goto	u1250
  1000   001A6A                     u1251:
  1001   001A6A  EF3B  F00D         	goto	l2212
  1002   001A6E                     u1250:
  1003   001A6E                     
  1004                           ;ECU_Layer/LCD/lcd.c: 108:          ret = (Std_ReturnType)0x00;
  1005   001A6E  0E00               	movlw	0
  1006   001A70  6E4A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1007                           
  1008                           ;ECU_Layer/LCD/lcd.c: 109:     }
  1009   001A72  EF4B  F00D         	goto	l2216
  1010   001A76                     l2212:
  1011                           
  1012                           ;ECU_Layer/LCD/lcd.c: 111:         ret = lcd_4bits_set_cursor(lcd , row, column);
  1013   001A76  C046  F040         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
  1014   001A7A  C047  F041         	movff	lcd_4bit_send_string_pos@row,lcd_4bits_set_cursor@row
  1015   001A7E  C048  F042         	movff	lcd_4bit_send_string_pos@column,lcd_4bits_set_cursor@column
  1016   001A82  EC41  F00B         	call	_lcd_4bits_set_cursor	;wreg free
  1017   001A86  6E4A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1018   001A88                     
  1019                           ;ECU_Layer/LCD/lcd.c: 112:         ret &= lcd_4bit_send_string(lcd, data);
  1020   001A88  C046  F040         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1021   001A8C  C049  F041         	movff	lcd_4bit_send_string_pos@data,lcd_4bit_send_string@data
  1022   001A90  ECD9  F00C         	call	_lcd_4bit_send_string	;wreg free
  1023   001A94  164A               	andwf	lcd_4bit_send_string_pos@ret^0,f,c
  1024   001A96                     l2216:
  1025                           
  1026                           ;ECU_Layer/LCD/lcd.c: 114:     return ret;
  1027   001A96  504A               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1028   001A98  0012               	return		;funcret
  1029   001A9A                     __end_of_lcd_4bit_send_string_pos:
  1030                           	callstack 0
  1031                           
  1032 ;; *************** function _lcd_4bits_set_cursor *****************
  1033 ;; Defined at:
  1034 ;;		line 329 in file "ECU_Layer/LCD/lcd.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  lcd             1   14[COMRAM] PTR const struct .
  1037 ;;		 -> lcd1(6), 
  1038 ;;  row             1   15[COMRAM] unsigned char 
  1039 ;;  column          1   16[COMRAM] unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  ret             1   19[COMRAM] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1051 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;Total ram usage:        6 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 3
  1058 ;; This function calls:
  1059 ;;		_lcd_4bit_send_command
  1060 ;; This function is called by:
  1061 ;;		_lcd_4bit_send_string_pos
  1062 ;;		_lcd_4bit_send_char_data_pos
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text4
  1067   001682                     __ptext4:
  1068                           	callstack 0
  1069   001682                     _lcd_4bits_set_cursor:
  1070                           	callstack 26
  1071   001682                     
  1072                           ;ECU_Layer/LCD/lcd.c: 330:    Std_ReturnType ret = (Std_ReturnType)0x01;
  1073   001682  0E01               	movlw	1
  1074   001684  6E45               	movwf	lcd_4bits_set_cursor@ret^0,c
  1075   001686                     
  1076                           ;ECU_Layer/LCD/lcd.c: 331:    column--;
  1077   001686  0642               	decf	lcd_4bits_set_cursor@column^0,f,c
  1078   001688                     
  1079                           ;ECU_Layer/LCD/lcd.c: 333:     if(((void*)0) == lcd ){
  1080   001688  5040               	movf	lcd_4bits_set_cursor@lcd^0,w,c
  1081   00168A  A4D8               	btfss	status,2,c
  1082   00168C  EF4A  F00B         	goto	u1151
  1083   001690  EF4C  F00B         	goto	u1150
  1084   001694                     u1151:
  1085   001694  EF78  F00B         	goto	l2102
  1086   001698                     u1150:
  1087   001698                     
  1088                           ;ECU_Layer/LCD/lcd.c: 334:          ret = (Std_ReturnType)0x00;
  1089   001698  0E00               	movlw	0
  1090   00169A  6E45               	movwf	lcd_4bits_set_cursor@ret^0,c
  1091                           
  1092                           ;ECU_Layer/LCD/lcd.c: 335:     }
  1093   00169C  EF95  F00B         	goto	l2104
  1094   0016A0                     l2094:
  1095   0016A0  C040  F03D         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1096   0016A4  5042               	movf	lcd_4bits_set_cursor@column^0,w,c
  1097   0016A6  0F80               	addlw	128
  1098   0016A8  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  1099   0016AA  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  1100   0016AE  6E45               	movwf	lcd_4bits_set_cursor@ret^0,c
  1101   0016B0  EF95  F00B         	goto	l2104
  1102   0016B4                     l2096:
  1103   0016B4  C040  F03D         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1104   0016B8  5042               	movf	lcd_4bits_set_cursor@column^0,w,c
  1105   0016BA  0FC0               	addlw	192
  1106   0016BC  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  1107   0016BE  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  1108   0016C2  6E45               	movwf	lcd_4bits_set_cursor@ret^0,c
  1109   0016C4  EF95  F00B         	goto	l2104
  1110   0016C8                     l2098:
  1111   0016C8  C040  F03D         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1112   0016CC  5042               	movf	lcd_4bits_set_cursor@column^0,w,c
  1113   0016CE  0F94               	addlw	148
  1114   0016D0  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  1115   0016D2  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  1116   0016D6  6E45               	movwf	lcd_4bits_set_cursor@ret^0,c
  1117   0016D8  EF95  F00B         	goto	l2104
  1118   0016DC                     l2100:
  1119   0016DC  C040  F03D         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1120   0016E0  5042               	movf	lcd_4bits_set_cursor@column^0,w,c
  1121   0016E2  0FD4               	addlw	212
  1122   0016E4  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  1123   0016E6  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  1124   0016EA  6E45               	movwf	lcd_4bits_set_cursor@ret^0,c
  1125   0016EC  EF95  F00B         	goto	l2104
  1126   0016F0                     l2102:
  1127   0016F0  5041               	movf	lcd_4bits_set_cursor@row^0,w,c
  1128   0016F2  6E43               	movwf	??_lcd_4bits_set_cursor^0,c
  1129   0016F4  6A44               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  1130                           
  1131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1132                           ; Switch size 1, requested type "simple"
  1133                           ; Number of cases is 1, Range of values is 0 to 0
  1134                           ; switch strategies available:
  1135                           ; Name         Instructions Cycles
  1136                           ; simple_byte            4     3 (average)
  1137                           ;	Chosen strategy is simple_byte
  1138   0016F6  5044               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  1139   0016F8  0A00               	xorlw	0	; case 0
  1140   0016FA  B4D8               	btfsc	status,2,c
  1141   0016FC  EF82  F00B         	goto	l2480
  1142   001700  EF95  F00B         	goto	l2104
  1143   001704                     l2480:
  1144                           
  1145                           ; Switch size 1, requested type "simple"
  1146                           ; Number of cases is 4, Range of values is 1 to 4
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte           13     7 (average)
  1150                           ;	Chosen strategy is simple_byte
  1151   001704  5043               	movf	??_lcd_4bits_set_cursor^0,w,c
  1152   001706  0A01               	xorlw	1	; case 1
  1153   001708  B4D8               	btfsc	status,2,c
  1154   00170A  EF50  F00B         	goto	l2094
  1155   00170E  0A03               	xorlw	3	; case 2
  1156   001710  B4D8               	btfsc	status,2,c
  1157   001712  EF5A  F00B         	goto	l2096
  1158   001716  0A01               	xorlw	1	; case 3
  1159   001718  B4D8               	btfsc	status,2,c
  1160   00171A  EF64  F00B         	goto	l2098
  1161   00171E  0A07               	xorlw	7	; case 4
  1162   001720  B4D8               	btfsc	status,2,c
  1163   001722  EF6E  F00B         	goto	l2100
  1164   001726  EF95  F00B         	goto	l2104
  1165   00172A                     l2104:
  1166                           
  1167                           ;ECU_Layer/LCD/lcd.c: 346:    return ret;
  1168   00172A  5045               	movf	lcd_4bits_set_cursor@ret^0,w,c
  1169   00172C  0012               	return		;funcret
  1170   00172E                     __end_of_lcd_4bits_set_cursor:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _lcd_4bit_send_string *****************
  1174 ;; Defined at:
  1175 ;;		line 90 in file "ECU_Layer/LCD/lcd.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  lcd             1   14[COMRAM] PTR const struct .
  1178 ;;		 -> lcd1(6), 
  1179 ;;  data            1   15[COMRAM] PTR unsigned char 
  1180 ;;		 -> STR_3(11), STR_2(14), STR_1(13), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  ret             1   16[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      unsigned char 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        3 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 3
  1199 ;; This function calls:
  1200 ;;		_lcd_4bit_send_char_data
  1201 ;; This function is called by:
  1202 ;;		_lcd_4bit_send_string_pos
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text5
  1207   0019B2                     __ptext5:
  1208                           	callstack 0
  1209   0019B2                     _lcd_4bit_send_string:
  1210                           	callstack 26
  1211   0019B2                     
  1212                           ;ECU_Layer/LCD/lcd.c: 91:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1213   0019B2  0E01               	movlw	1
  1214   0019B4  6E42               	movwf	lcd_4bit_send_string@ret^0,c
  1215                           
  1216                           ;ECU_Layer/LCD/lcd.c: 93:     if(((void*)0) == lcd ){
  1217   0019B6  5040               	movf	lcd_4bit_send_string@lcd^0,w,c
  1218   0019B8  A4D8               	btfss	status,2,c
  1219   0019BA  EFE1  F00C         	goto	u1161
  1220   0019BE  EFE3  F00C         	goto	u1160
  1221   0019C2                     u1161:
  1222   0019C2  EFF4  F00C         	goto	l2120
  1223   0019C6                     u1160:
  1224   0019C6                     
  1225                           ;ECU_Layer/LCD/lcd.c: 94:          ret = (Std_ReturnType)0x00;
  1226   0019C6  0E00               	movlw	0
  1227   0019C8  6E42               	movwf	lcd_4bit_send_string@ret^0,c
  1228                           
  1229                           ;ECU_Layer/LCD/lcd.c: 95:     }
  1230   0019CA  EF02  F00D         	goto	l2122
  1231   0019CE                     l2116:
  1232                           
  1233                           ;ECU_Layer/LCD/lcd.c: 98:             ret = lcd_4bit_send_char_data(lcd , *data++);
  1234   0019CE  C040  F03D         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  1235   0019D2  C041  FFF6         	movff	lcd_4bit_send_string@data,tblptrl
  1236   0019D6                     	if	1	;There is more than 1 active tblptr byte
  1237   0019D6  0E10               	movlw	high __smallconst
  1238   0019D8  6EF7               	movwf	tblptrh,c
  1239   0019DA                     	endif
  1240   0019DA                     	if	0	;tblptru may be non-zero
  1241   0019DA                     	endif
  1242   0019DA                     	if	0	;tblptru may be non-zero
  1243   0019DA                     	endif
  1244   0019DA  0008               	tblrd		*
  1245   0019DC  CFF5 F03E          	movff	tablat,lcd_4bit_send_char_data@data
  1246   0019E0  EC7D  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1247   0019E4  6E42               	movwf	lcd_4bit_send_string@ret^0,c
  1248   0019E6  2A41               	incf	lcd_4bit_send_string@data^0,f,c
  1249   0019E8                     l2120:
  1250                           
  1251                           ;ECU_Layer/LCD/lcd.c: 97:         while(*data){
  1252   0019E8  C041  FFF6         	movff	lcd_4bit_send_string@data,tblptrl
  1253   0019EC                     	if	1	;There is more than 1 active tblptr byte
  1254   0019EC  0E10               	movlw	high __smallconst
  1255   0019EE  6EF7               	movwf	tblptrh,c
  1256   0019F0                     	endif
  1257   0019F0                     	if	0	;tblptru may be non-zero
  1258   0019F0                     	endif
  1259   0019F0                     	if	0	;tblptru may be non-zero
  1260   0019F0                     	endif
  1261   0019F0  0008               	tblrd		*
  1262   0019F2  50F5               	movf	tablat,w,c
  1263   0019F4  0900               	iorlw	0
  1264   0019F6  A4D8               	btfss	status,2,c
  1265   0019F8  EF00  F00D         	goto	u1171
  1266   0019FC  EF02  F00D         	goto	u1170
  1267   001A00                     u1171:
  1268   001A00  EFE7  F00C         	goto	l2116
  1269   001A04                     u1170:
  1270   001A04                     l2122:
  1271                           
  1272                           ;ECU_Layer/LCD/lcd.c: 101:     return ret;
  1273   001A04  5042               	movf	lcd_4bit_send_string@ret^0,w,c
  1274   001A06  0012               	return		;funcret
  1275   001A08                     __end_of_lcd_4bit_send_string:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _lcd_4bit_send_char_data *****************
  1279 ;; Defined at:
  1280 ;;		line 60 in file "ECU_Layer/LCD/lcd.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  lcd             1   11[COMRAM] PTR const struct .
  1283 ;;		 -> lcd1(6), 
  1284 ;;  data            1   12[COMRAM] unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  ret             1   13[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        3 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 2
  1303 ;; This function calls:
  1304 ;;		_gpio_pin_write_logic
  1305 ;;		_lcd_4bits_send_enable_signal
  1306 ;;		_lcd_send_4bits
  1307 ;; This function is called by:
  1308 ;;		_lcd_4bit_send_string
  1309 ;;		_lcd_4bit_send_char_data_pos
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text6
  1314   0018FA                     __ptext6:
  1315                           	callstack 0
  1316   0018FA                     _lcd_4bit_send_char_data:
  1317                           	callstack 26
  1318   0018FA                     
  1319                           ;ECU_Layer/LCD/lcd.c: 63:     if(((void*)0) == lcd ){
  1320   0018FA  503D               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1321   0018FC  A4D8               	btfss	status,2,c
  1322   0018FE  EF83  F00C         	goto	u1091
  1323   001902  EF85  F00C         	goto	u1090
  1324   001906                     u1091:
  1325   001906  EF89  F00C         	goto	l2014
  1326   00190A                     u1090:
  1327   00190A                     
  1328                           ;ECU_Layer/LCD/lcd.c: 64:          ret = (Std_ReturnType)0x00;
  1329   00190A  0E00               	movlw	0
  1330   00190C  6E3F               	movwf	lcd_4bit_send_char_data@ret^0,c
  1331                           
  1332                           ;ECU_Layer/LCD/lcd.c: 65:     }
  1333   00190E  EFA9  F00C         	goto	l2016
  1334   001912                     l2014:
  1335                           
  1336                           ;ECU_Layer/LCD/lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs) , HIGH);
  1337   001912  C03D  F032         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin
  1338   001916  0E01               	movlw	1
  1339   001918  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  1340   00191A  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  1341   00191E  6E3F               	movwf	lcd_4bit_send_char_data@ret^0,c
  1342                           
  1343                           ;ECU_Layer/LCD/lcd.c: 69:         ret = lcd_send_4bits( lcd ,data >> 4);
  1344   001920  C03D  F03A         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1345   001924  383E               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1346   001926  0B0F               	andlw	15
  1347   001928  6E3B               	movwf	lcd_send_4bits@data_command^0,c
  1348   00192A  EC04  F00D         	call	_lcd_send_4bits	;wreg free
  1349   00192E  6E3F               	movwf	lcd_4bit_send_char_data@ret^0,c
  1350                           
  1351                           ;ECU_Layer/LCD/lcd.c: 70:         ret = lcd_4bits_send_enable_signal(lcd);
  1352   001930  C03D  F03A         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1353   001934  ECAE  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  1354   001938  6E3F               	movwf	lcd_4bit_send_char_data@ret^0,c
  1355                           
  1356                           ;ECU_Layer/LCD/lcd.c: 71:         ret = lcd_send_4bits( lcd ,data);
  1357   00193A  C03D  F03A         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1358   00193E  C03E  F03B         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1359   001942  EC04  F00D         	call	_lcd_send_4bits	;wreg free
  1360   001946  6E3F               	movwf	lcd_4bit_send_char_data@ret^0,c
  1361                           
  1362                           ;ECU_Layer/LCD/lcd.c: 72:         ret = lcd_4bits_send_enable_signal(lcd);
  1363   001948  C03D  F03A         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1364   00194C  ECAE  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  1365   001950  6E3F               	movwf	lcd_4bit_send_char_data@ret^0,c
  1366   001952                     l2016:
  1367                           
  1368                           ;ECU_Layer/LCD/lcd.c: 74:     return ret;
  1369   001952  503F               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1370   001954  0012               	return		;funcret
  1371   001956                     __end_of_lcd_4bit_send_char_data:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _application_initialize *****************
  1375 ;; Defined at:
  1376 ;;		line 86 in file "ECU_Layer/layer_initialize.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 4
  1397 ;; This function calls:
  1398 ;;		_lcd_4bit_initialize
  1399 ;;		_lcd_8bit_initialize
  1400 ;;		_led_initialize
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text7
  1407   001AD0                     __ptext7:
  1408                           	callstack 0
  1409   001AD0                     _application_initialize:
  1410                           	callstack 26
  1411   001AD0                     
  1412                           ;ECU_Layer/layer_initialize.c: 87:     ret = lcd_4bit_initialize(&lcd1);
  1413   001AD0  0E29               	movlw	low _lcd1
  1414   001AD2  6E41               	movwf	lcd_4bit_initialize@lcd^0,c
  1415   001AD4  EC6D  F00A         	call	_lcd_4bit_initialize	;wreg free
  1416   001AD8  6E57               	movwf	_ret^0,c
  1417                           
  1418                           ;ECU_Layer/layer_initialize.c: 88:     ret = lcd_8bit_initialize(&lcd2);
  1419   001ADA  0E1F               	movlw	low _lcd2
  1420   001ADC  6E42               	movwf	lcd_8bit_initialize@lcd^0,c
  1421   001ADE  ECDA  F00A         	call	_lcd_8bit_initialize	;wreg free
  1422   001AE2  6E57               	movwf	_ret^0,c
  1423                           
  1424                           ;ECU_Layer/layer_initialize.c: 89:     ret = led_initialize(&red);
  1425   001AE4  0E31               	movlw	low _red
  1426   001AE6  6E39               	movwf	led_initialize@led^0,c
  1427   001AE8  EC45  F00C         	call	_led_initialize	;wreg free
  1428   001AEC  6E57               	movwf	_ret^0,c
  1429                           
  1430                           ;ECU_Layer/layer_initialize.c: 90:     ret = led_initialize(&green);
  1431   001AEE  0E30               	movlw	low _green
  1432   001AF0  6E39               	movwf	led_initialize@led^0,c
  1433   001AF2  EC45  F00C         	call	_led_initialize	;wreg free
  1434   001AF6  6E57               	movwf	_ret^0,c
  1435                           
  1436                           ;ECU_Layer/layer_initialize.c: 91:     ret = led_initialize(&yellow);
  1437   001AF8  0E2F               	movlw	low _yellow
  1438   001AFA  6E39               	movwf	led_initialize@led^0,c
  1439   001AFC  EC45  F00C         	call	_led_initialize	;wreg free
  1440   001B00  6E57               	movwf	_ret^0,c
  1441   001B02  0012               	return		;funcret
  1442   001B04                     __end_of_application_initialize:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _led_initialize *****************
  1446 ;; Defined at:
  1447 ;;		line 12 in file "ECU_Layer/LED/ecu_led.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  led             1    7[COMRAM] PTR const struct .
  1450 ;;		 -> yellow(1), green(1), red(1), 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  pin             1   10[COMRAM] struct .
  1453 ;;  ret             1    9[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      unsigned char 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:        4 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 1
  1470 ;; This function calls:
  1471 ;;		_gpio_pin_direction_initialize
  1472 ;; This function is called by:
  1473 ;;		_application_initialize
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text8
  1478   00188A                     __ptext8:
  1479                           	callstack 0
  1480   00188A                     _led_initialize:
  1481                           	callstack 28
  1482   00188A                     
  1483                           ;ECU_Layer/LED/ecu_led.c: 13:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1484   00188A  0E01               	movlw	1
  1485   00188C  6E3B               	movwf	led_initialize@ret^0,c
  1486                           
  1487                           ;ECU_Layer/LED/ecu_led.c: 15:     if(((void*)0) == led){
  1488   00188E  5039               	movf	led_initialize@led^0,w,c
  1489   001890  A4D8               	btfss	status,2,c
  1490   001892  EF4D  F00C         	goto	u1231
  1491   001896  EF4F  F00C         	goto	u1230
  1492   00189A                     u1231:
  1493   00189A  EF53  F00C         	goto	l209
  1494   00189E                     u1230:
  1495   00189E                     
  1496                           ;ECU_Layer/LED/ecu_led.c: 16:         ret = (Std_ReturnType)0x00;
  1497   00189E  0E00               	movlw	0
  1498   0018A0  6E3B               	movwf	led_initialize@ret^0,c
  1499                           
  1500                           ;ECU_Layer/LED/ecu_led.c: 17:     }
  1501   0018A2  EF7B  F00C         	goto	l2204
  1502   0018A6                     l209:
  1503                           
  1504                           ;ECU_Layer/LED/ecu_led.c: 19:         pin_confg_t pin = {.port = led->port , .pin = led-
      +                          >pin , .direction = OUTPUT , .logic = led->status};
  1505   0018A6  C056  F03C         	movff	led_initialize@F2888,led_initialize@pin
  1506   0018AA  5039               	movf	led_initialize@led^0,w,c
  1507   0018AC  6ED9               	movwf	fsr2l,c
  1508   0018AE  6ADA               	clrf	fsr2h,c
  1509   0018B0  50DF               	movf	223,w,c
  1510   0018B2  0B0F               	andlw	15
  1511   0018B4  6E3A               	movwf	??_led_initialize^0,c
  1512   0018B6  503C               	movf	led_initialize@pin^0,w,c
  1513   0018B8  183A               	xorwf	??_led_initialize^0,w,c
  1514   0018BA  0BF8               	andlw	-8
  1515   0018BC  183A               	xorwf	??_led_initialize^0,w,c
  1516   0018BE  6E3C               	movwf	led_initialize@pin^0,c
  1517   0018C0  5039               	movf	led_initialize@led^0,w,c
  1518   0018C2  6ED9               	movwf	fsr2l,c
  1519   0018C4  6ADA               	clrf	fsr2h,c
  1520   0018C6  38DF               	swapf	223,w,c
  1521   0018C8  0B07               	andlw	7
  1522   0018CA  6E3A               	movwf	??_led_initialize^0,c
  1523   0018CC  463A               	rlncf	??_led_initialize^0,f,c
  1524   0018CE  463A               	rlncf	??_led_initialize^0,f,c
  1525   0018D0  463A               	rlncf	??_led_initialize^0,f,c
  1526   0018D2  503C               	movf	led_initialize@pin^0,w,c
  1527   0018D4  183A               	xorwf	??_led_initialize^0,w,c
  1528   0018D6  0BC7               	andlw	-57
  1529   0018D8  183A               	xorwf	??_led_initialize^0,w,c
  1530   0018DA  6E3C               	movwf	led_initialize@pin^0,c
  1531   0018DC  9C3C               	bcf	led_initialize@pin^0,6,c
  1532   0018DE  5039               	movf	led_initialize@led^0,w,c
  1533   0018E0  6ED9               	movwf	fsr2l,c
  1534   0018E2  6ADA               	clrf	fsr2h,c
  1535   0018E4  AEDF               	btfss	indf2,7,c
  1536   0018E6  D002               	bra	u1245
  1537   0018E8  8E3C               	bsf	led_initialize@pin^0,7,c
  1538   0018EA  D001               	bra	u1247
  1539   0018EC                     u1245:
  1540   0018EC  9E3C               	bcf	led_initialize@pin^0,7,c
  1541   0018EE                     u1247:
  1542   0018EE                     
  1543                           ;ECU_Layer/LED/ecu_led.c: 20:         gpio_pin_direction_initialize(&pin);
  1544   0018EE  0E3C               	movlw	low led_initialize@pin
  1545   0018F0  6E32               	movwf	gpio_pin_direction_initialize@pin^0,c
  1546   0018F2  EC52  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1547   0018F6                     l2204:
  1548                           
  1549                           ;ECU_Layer/LED/ecu_led.c: 22:     return ret;
  1550   0018F6  503B               	movf	led_initialize@ret^0,w,c
  1551   0018F8  0012               	return		;funcret
  1552   0018FA                     __end_of_led_initialize:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _gpio_pin_direction_initialize *****************
  1556 ;; Defined at:
  1557 ;;		line 40 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  pin             1    0[COMRAM] PTR const struct .
  1560 ;;		 -> led_initialize@pin(1), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  ret             1    6[COMRAM] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      unsigned char 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1572 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;Total ram usage:        7 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_led_initialize
  1582 ;;		_button_initialize
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text9
  1587   0012A4                     __ptext9:
  1588                           	callstack 0
  1589   0012A4                     _gpio_pin_direction_initialize:
  1590                           	callstack 28
  1591   0012A4                     
  1592                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1593   0012A4  0E01               	movlw	1
  1594   0012A6  6E38               	movwf	gpio_pin_direction_initialize@ret^0,c
  1595                           
  1596                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     if(((void*)0) == pin || pin->pin > 7){
  1597   0012A8  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1598   0012AA  B4D8               	btfsc	status,2,c
  1599   0012AC  EF5A  F009         	goto	u961
  1600   0012B0  EF5C  F009         	goto	u960
  1601   0012B4                     u961:
  1602   0012B4  EF6C  F009         	goto	l1958
  1603   0012B8                     u960:
  1604   0012B8  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1605   0012BA  6ED9               	movwf	fsr2l,c
  1606   0012BC  6ADA               	clrf	fsr2h,c
  1607   0012BE  30DF               	rrcf	223,w,c
  1608   0012C0  32E8               	rrcf	wreg,f,c
  1609   0012C2  32E8               	rrcf	wreg,f,c
  1610   0012C4  0B07               	andlw	7
  1611   0012C6  6E33               	movwf	??_gpio_pin_direction_initialize^0,c
  1612   0012C8  0E07               	movlw	7
  1613   0012CA  6433               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1614   0012CC  EF6A  F009         	goto	u971
  1615   0012D0  EF6C  F009         	goto	u970
  1616   0012D4                     u971:
  1617   0012D4  EFC3  F009         	goto	l1966
  1618   0012D8                     u970:
  1619   0012D8                     l1958:
  1620                           
  1621                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:          ret = (Std_ReturnType)0x00;
  1622   0012D8  0E00               	movlw	0
  1623   0012DA  6E38               	movwf	gpio_pin_direction_initialize@ret^0,c
  1624                           
  1625                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     }
  1626   0012DC  EFE3  F009         	goto	l1968
  1627   0012E0                     l1960:
  1628                           
  1629                           ;MCAL_Layer/GPIO/hal_gpio.c: 49:                 (*tris_registers[pin->port] &= ~(1 << p
      +                          in->pin));
  1630   0012E0  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1631   0012E2  6ED9               	movwf	fsr2l,c
  1632   0012E4  6ADA               	clrf	fsr2h,c
  1633   0012E6  30DF               	rrcf	223,w,c
  1634   0012E8  32E8               	rrcf	wreg,f,c
  1635   0012EA  32E8               	rrcf	wreg,f,c
  1636   0012EC  0B07               	andlw	7
  1637   0012EE  6E33               	movwf	??_gpio_pin_direction_initialize^0,c
  1638   0012F0  0E01               	movlw	1
  1639   0012F2  6E34               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1640   0012F4  2A33               	incf	??_gpio_pin_direction_initialize^0,f,c
  1641   0012F6  EF7F  F009         	goto	u984
  1642   0012FA                     u985:
  1643   0012FA  90D8               	bcf	status,0,c
  1644   0012FC  3634               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1645   0012FE                     u984:
  1646   0012FE  2E33               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1647   001300  EF7D  F009         	goto	u985
  1648   001304  5034               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1649   001306  0AFF               	xorlw	255
  1650   001308  6E35               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1651   00130A  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1652   00130C  6ED9               	movwf	fsr2l,c
  1653   00130E  6ADA               	clrf	fsr2h,c
  1654   001310  50DF               	movf	223,w,c
  1655   001312  0B07               	andlw	7
  1656   001314  0D02               	mullw	2
  1657   001316  50F3               	movf	243,w,c
  1658   001318  0F15               	addlw	low _tris_registers
  1659   00131A  6ED9               	movwf	fsr2l,c
  1660   00131C  6ADA               	clrf	fsr2h,c
  1661   00131E  CFDE F036          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1662   001322  CFDD F037          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1663   001326  C036  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1664   00132A  C037  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1665   00132E  5035               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1666   001330  16DF               	andwf	indf2,f,c
  1667                           
  1668                           ;MCAL_Layer/GPIO/hal_gpio.c: 50:                 break;
  1669   001332  EFE3  F009         	goto	l1968
  1670   001336                     l1962:
  1671                           
  1672                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 (*tris_registers[pin->port] |= (1 << pi
      +                          n->pin));
  1673   001336  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1674   001338  6ED9               	movwf	fsr2l,c
  1675   00133A  6ADA               	clrf	fsr2h,c
  1676   00133C  30DF               	rrcf	223,w,c
  1677   00133E  32E8               	rrcf	wreg,f,c
  1678   001340  32E8               	rrcf	wreg,f,c
  1679   001342  0B07               	andlw	7
  1680   001344  6E33               	movwf	??_gpio_pin_direction_initialize^0,c
  1681   001346  0E01               	movlw	1
  1682   001348  6E34               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1683   00134A  2A33               	incf	??_gpio_pin_direction_initialize^0,f,c
  1684   00134C  EFAA  F009         	goto	u994
  1685   001350                     u995:
  1686   001350  90D8               	bcf	status,0,c
  1687   001352  3634               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1688   001354                     u994:
  1689   001354  2E33               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1690   001356  EFA8  F009         	goto	u995
  1691   00135A  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1692   00135C  6ED9               	movwf	fsr2l,c
  1693   00135E  6ADA               	clrf	fsr2h,c
  1694   001360  50DF               	movf	223,w,c
  1695   001362  0B07               	andlw	7
  1696   001364  0D02               	mullw	2
  1697   001366  50F3               	movf	243,w,c
  1698   001368  0F15               	addlw	low _tris_registers
  1699   00136A  6ED9               	movwf	fsr2l,c
  1700   00136C  6ADA               	clrf	fsr2h,c
  1701   00136E  CFDE F035          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1702   001372  CFDD F036          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1703   001376  C035  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1704   00137A  C036  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1705   00137E  5034               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1706   001380  12DF               	iorwf	indf2,f,c
  1707                           
  1708                           ;MCAL_Layer/GPIO/hal_gpio.c: 54:                 break;
  1709   001382  EFE3  F009         	goto	l1968
  1710   001386                     l1966:
  1711   001386  5032               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1712   001388  6ED9               	movwf	fsr2l,c
  1713   00138A  6ADA               	clrf	fsr2h,c
  1714   00138C  BCDF               	btfsc	indf2,6,c
  1715   00138E  EFCB  F009         	goto	u1001
  1716   001392  EFCE  F009         	goto	u1000
  1717   001396                     u1001:
  1718   001396  0E01               	movlw	1
  1719   001398  EFCF  F009         	goto	u1010
  1720   00139C                     u1000:
  1721   00139C  0E00               	movlw	0
  1722   00139E                     u1010:
  1723   00139E  6E33               	movwf	??_gpio_pin_direction_initialize^0,c
  1724   0013A0  6A34               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1725                           
  1726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1727                           ; Switch size 1, requested type "simple"
  1728                           ; Number of cases is 1, Range of values is 0 to 0
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; simple_byte            4     3 (average)
  1732                           ;	Chosen strategy is simple_byte
  1733   0013A2  5034               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1734   0013A4  0A00               	xorlw	0	; case 0
  1735   0013A6  B4D8               	btfsc	status,2,c
  1736   0013A8  EFD8  F009         	goto	l2482
  1737   0013AC  EF6C  F009         	goto	l1958
  1738   0013B0                     l2482:
  1739                           
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 2, Range of values is 0 to 1
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            7     4 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746   0013B0  5033               	movf	??_gpio_pin_direction_initialize^0,w,c
  1747   0013B2  0A00               	xorlw	0	; case 0
  1748   0013B4  B4D8               	btfsc	status,2,c
  1749   0013B6  EF70  F009         	goto	l1960
  1750   0013BA  0A01               	xorlw	1	; case 1
  1751   0013BC  B4D8               	btfsc	status,2,c
  1752   0013BE  EF9B  F009         	goto	l1962
  1753   0013C2  EF6C  F009         	goto	l1958
  1754   0013C6                     l1968:
  1755                           
  1756                           ;MCAL_Layer/GPIO/hal_gpio.c: 59:     return ret;
  1757   0013C6  5038               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1758   0013C8  0012               	return		;funcret
  1759   0013CA                     __end_of_gpio_pin_direction_initialize:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _lcd_8bit_initialize *****************
  1763 ;; Defined at:
  1764 ;;		line 131 in file "ECU_Layer/LCD/lcd.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  lcd             1   16[COMRAM] PTR const struct .
  1767 ;;		 -> lcd2(10), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  ret             1   19[COMRAM] unsigned char 
  1770 ;;  l_counter       1   18[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      unsigned char 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        4 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 3
  1787 ;; This function calls:
  1788 ;;		_gpio_pin_direction_initialize_write
  1789 ;;		_lcd_8bit_send_command
  1790 ;; This function is called by:
  1791 ;;		_application_initialize
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text10
  1796   0015B4                     __ptext10:
  1797                           	callstack 0
  1798   0015B4                     _lcd_8bit_initialize:
  1799                           	callstack 26
  1800   0015B4                     
  1801                           ;ECU_Layer/LCD/lcd.c: 133:     uint8 l_counter= 0;
  1802   0015B4  0E00               	movlw	0
  1803   0015B6  6E44               	movwf	lcd_8bit_initialize@l_counter^0,c
  1804                           
  1805                           ;ECU_Layer/LCD/lcd.c: 135:     if(((void*)0) == lcd ){
  1806   0015B8  5042               	movf	lcd_8bit_initialize@lcd^0,w,c
  1807   0015BA  A4D8               	btfss	status,2,c
  1808   0015BC  EFE2  F00A         	goto	u1181
  1809   0015C0  EFE4  F00A         	goto	u1180
  1810   0015C4                     u1181:
  1811   0015C4  EFE8  F00A         	goto	l2130
  1812   0015C8                     u1180:
  1813   0015C8                     
  1814                           ;ECU_Layer/LCD/lcd.c: 136:          ret = (Std_ReturnType)0x00;
  1815   0015C8  0E00               	movlw	0
  1816   0015CA  6E45               	movwf	lcd_8bit_initialize@ret^0,c
  1817                           
  1818                           ;ECU_Layer/LCD/lcd.c: 137:     }
  1819   0015CC  EF3F  F00B         	goto	l2162
  1820   0015D0                     l2130:
  1821                           
  1822                           ;ECU_Layer/LCD/lcd.c: 139:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_
      +                          en));
  1823   0015D0  2842               	incf	lcd_8bit_initialize@lcd^0,w,c
  1824   0015D2  6E3A               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1825   0015D4  ECB3  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1826   0015D8  6E45               	movwf	lcd_8bit_initialize@ret^0,c
  1827                           
  1828                           ;ECU_Layer/LCD/lcd.c: 140:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_
      +                          rs));
  1829   0015DA  C042  F03A         	movff	lcd_8bit_initialize@lcd,gpio_pin_direction_initialize_write@pin
  1830   0015DE  ECB3  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1831   0015E2  6E45               	movwf	lcd_8bit_initialize@ret^0,c
  1832   0015E4                     
  1833                           ;ECU_Layer/LCD/lcd.c: 141:         for (l_counter = 0; l_counter < 8;l_counter++){
  1834   0015E4  0E00               	movlw	0
  1835   0015E6  6E44               	movwf	lcd_8bit_initialize@l_counter^0,c
  1836   0015E8                     l2138:
  1837   0015E8  5042               	movf	lcd_8bit_initialize@lcd^0,w,c
  1838   0015EA  2444               	addwf	lcd_8bit_initialize@l_counter^0,w,c
  1839   0015EC  0F02               	addlw	2
  1840   0015EE  6E3A               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1841   0015F0  ECB3  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1842   0015F4                     
  1843                           ;ECU_Layer/LCD/lcd.c: 143:         }
  1844   0015F4  2A44               	incf	lcd_8bit_initialize@l_counter^0,f,c
  1845   0015F6  0E07               	movlw	7
  1846   0015F8  6444               	cpfsgt	lcd_8bit_initialize@l_counter^0,c
  1847   0015FA  EF01  F00B         	goto	u1191
  1848   0015FE  EF03  F00B         	goto	u1190
  1849   001602                     u1191:
  1850   001602  EFF4  F00A         	goto	l2138
  1851   001606                     u1190:
  1852   001606                     
  1853                           ;ECU_Layer/LCD/lcd.c: 144:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1854   001606  0E34               	movlw	52
  1855   001608  6E43               	movwf	??_lcd_8bit_initialize^0,c
  1856   00160A  0EF2               	movlw	242
  1857   00160C                     u1537:
  1858   00160C  2EE8               	decfsz	wreg,f,c
  1859   00160E  D7FE               	bra	u1537
  1860   001610  2E43               	decfsz	??_lcd_8bit_initialize^0,f,c
  1861   001612  D7FC               	bra	u1537
  1862   001614  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1863   001618  0E38               	movlw	56
  1864   00161A  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1865   00161C  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1866   001620                     
  1867                           ;ECU_Layer/LCD/lcd.c: 146:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1868   001620  0E0D               	movlw	13
  1869   001622  6E43               	movwf	??_lcd_8bit_initialize^0,c
  1870   001624  0EFC               	movlw	252
  1871   001626                     u1547:
  1872   001626  2EE8               	decfsz	wreg,f,c
  1873   001628  D7FE               	bra	u1547
  1874   00162A  2E43               	decfsz	??_lcd_8bit_initialize^0,f,c
  1875   00162C  D7FC               	bra	u1547
  1876   00162E  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1877   001632  0E38               	movlw	56
  1878   001634  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1879   001636  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1880   00163A                     
  1881                           ;ECU_Layer/LCD/lcd.c: 148:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  1882   00163A  0E64               	movlw	100
  1883   00163C                     u1557:
  1884   00163C  2EE8               	decfsz	wreg,f,c
  1885   00163E  D7FE               	bra	u1557
  1886   001640  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1887   001644  0E38               	movlw	56
  1888   001646  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1889   001648  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1890   00164C  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1891   001650  0E01               	movlw	1
  1892   001652  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1893   001654  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1894   001658  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1895   00165C  0E02               	movlw	2
  1896   00165E  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1897   001660  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1898   001664  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1899   001668  0E06               	movlw	6
  1900   00166A  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1901   00166C  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1902   001670                     
  1903                           ;ECU_Layer/LCD/lcd.c: 153:         ret = lcd_8bit_send_command(lcd , 0x0C);
  1904   001670  C042  F03C         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1905   001674  0E0C               	movlw	12
  1906   001676  6E3D               	movwf	lcd_8bit_send_command@command^0,c
  1907   001678  EC97  F00B         	call	_lcd_8bit_send_command	;wreg free
  1908   00167C  6E45               	movwf	lcd_8bit_initialize@ret^0,c
  1909   00167E                     l2162:
  1910                           
  1911                           ;ECU_Layer/LCD/lcd.c: 155:     return ret;
  1912   00167E  5045               	movf	lcd_8bit_initialize@ret^0,w,c
  1913   001680  0012               	return		;funcret
  1914   001682                     __end_of_lcd_8bit_initialize:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _lcd_8bit_send_command *****************
  1918 ;; Defined at:
  1919 ;;		line 158 in file "ECU_Layer/LCD/lcd.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  lcd             1   10[COMRAM] PTR const struct .
  1922 ;;		 -> lcd2(10), 
  1923 ;;  command         1   11[COMRAM] unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1926 ;;  ret             1   14[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      unsigned char 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        6 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 2
  1943 ;; This function calls:
  1944 ;;		_gpio_pin_write_logic
  1945 ;;		_lcd_8bits_send_enable_signal
  1946 ;; This function is called by:
  1947 ;;		_lcd_8bit_initialize
  1948 ;;		_lcd_8bits_set_cursor
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text11
  1953   00172E                     __ptext11:
  1954                           	callstack 0
  1955   00172E                     _lcd_8bit_send_command:
  1956                           	callstack 26
  1957   00172E                     
  1958                           ;ECU_Layer/LCD/lcd.c: 160:     uint8 l_pin_counter = 0;
  1959   00172E  0E00               	movlw	0
  1960   001730  6E41               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1961                           
  1962                           ;ECU_Layer/LCD/lcd.c: 162:     if(((void*)0) == lcd ){
  1963   001732  503C               	movf	lcd_8bit_send_command@lcd^0,w,c
  1964   001734  A4D8               	btfss	status,2,c
  1965   001736  EF9F  F00B         	goto	u1101
  1966   00173A  EFA1  F00B         	goto	u1100
  1967   00173E                     u1101:
  1968   00173E  EFA5  F00B         	goto	l2024
  1969   001742                     u1100:
  1970   001742                     
  1971                           ;ECU_Layer/LCD/lcd.c: 163:          ret = (Std_ReturnType)0x00;
  1972   001742  0E00               	movlw	0
  1973   001744  6E40               	movwf	lcd_8bit_send_command@ret^0,c
  1974                           
  1975                           ;ECU_Layer/LCD/lcd.c: 164:     }
  1976   001746  EFD0  F00B         	goto	l2040
  1977   00174A                     l2024:
  1978   00174A  C03C  F032         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin
  1979   00174E  0E00               	movlw	0
  1980   001750  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  1981   001752  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  1982   001756                     
  1983                           ;ECU_Layer/LCD/lcd.c: 168:         for(l_pin_counter = 0 ; l_pin_counter <8 ; l_pin_coun
      +                          ter ++){
  1984   001756  0E00               	movlw	0
  1985   001758  6E41               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1986   00175A                     l2032:
  1987   00175A  503C               	movf	lcd_8bit_send_command@lcd^0,w,c
  1988   00175C  2441               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1989   00175E  0F02               	addlw	2
  1990   001760  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  1991   001762  C041  F03E         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1992   001766  C03D  F03F         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1993   00176A  2A3E               	incf	??_lcd_8bit_send_command^0,f,c
  1994   00176C  EFBA  F00B         	goto	u1114
  1995   001770                     u1115:
  1996   001770  90D8               	bcf	status,0,c
  1997   001772  323F               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1998   001774                     u1114:
  1999   001774  2E3E               	decfsz	??_lcd_8bit_send_command^0,f,c
  2000   001776  EFB8  F00B         	goto	u1115
  2001   00177A  503F               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  2002   00177C  0B01               	andlw	1
  2003   00177E  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2004   001780  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2005   001784                     
  2006                           ;ECU_Layer/LCD/lcd.c: 170:         }
  2007   001784  2A41               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  2008   001786  0E07               	movlw	7
  2009   001788  6441               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  2010   00178A  EFC9  F00B         	goto	u1121
  2011   00178E  EFCB  F00B         	goto	u1120
  2012   001792                     u1121:
  2013   001792  EFAD  F00B         	goto	l2032
  2014   001796                     u1120:
  2015   001796                     
  2016                           ;ECU_Layer/LCD/lcd.c: 171:         ret = lcd_8bits_send_enable_signal(lcd);
  2017   001796  C03C  F03A         	movff	lcd_8bit_send_command@lcd,lcd_8bits_send_enable_signal@lcd
  2018   00179A  EC9B  F00D         	call	_lcd_8bits_send_enable_signal	;wreg free
  2019   00179E  6E40               	movwf	lcd_8bit_send_command@ret^0,c
  2020   0017A0                     l2040:
  2021                           
  2022                           ;ECU_Layer/LCD/lcd.c: 173:     return ret;
  2023   0017A0  5040               	movf	lcd_8bit_send_command@ret^0,w,c
  2024   0017A2  0012               	return		;funcret
  2025   0017A4                     __end_of_lcd_8bit_send_command:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _lcd_8bits_send_enable_signal *****************
  2029 ;; Defined at:
  2030 ;;		line 300 in file "ECU_Layer/LCD/lcd.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  lcd             1    8[COMRAM] PTR const struct .
  2033 ;;		 -> lcd2(10), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  ret             1    9[COMRAM] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      unsigned char 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:        2 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 1
  2052 ;; This function calls:
  2053 ;;		_gpio_pin_write_logic
  2054 ;; This function is called by:
  2055 ;;		_lcd_8bit_send_command
  2056 ;;		_lcd_8bit_send_char_data
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text12
  2061   001B36                     __ptext12:
  2062                           	callstack 0
  2063   001B36                     _lcd_8bits_send_enable_signal:
  2064                           	callstack 26
  2065   001B36  283A               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  2066   001B38  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2067   001B3A  0E01               	movlw	1
  2068   001B3C  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2069   001B3E  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2070   001B42                     
  2071                           ;ECU_Layer/LCD/lcd.c: 304:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  2072   001B42  0E03               	movlw	3
  2073   001B44                     u1567:
  2074   001B44  2EE8               	decfsz	wreg,f,c
  2075   001B46  D7FE               	bra	u1567
  2076   001B48  0000               	nop	
  2077   001B4A                     
  2078                           ;ECU_Layer/LCD/lcd.c: 305:     ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  2079   001B4A  283A               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  2080   001B4C  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2081   001B4E  0E00               	movlw	0
  2082   001B50  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2083   001B52  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2084   001B56  6E3B               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  2085   001B58                     
  2086                           ;ECU_Layer/LCD/lcd.c: 306:     return ret;
  2087   001B58  503B               	movf	lcd_8bits_send_enable_signal@ret^0,w,c
  2088   001B5A  0012               	return		;funcret
  2089   001B5C                     __end_of_lcd_8bits_send_enable_signal:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _lcd_4bit_initialize *****************
  2093 ;; Defined at:
  2094 ;;		line 14 in file "ECU_Layer/LCD/lcd.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  lcd             1   15[COMRAM] PTR const struct .
  2097 ;;		 -> lcd1(6), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  ret             1   18[COMRAM] unsigned char 
  2100 ;;  l_counter       1   17[COMRAM] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:        4 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 3
  2117 ;; This function calls:
  2118 ;;		_gpio_pin_direction_initialize_write
  2119 ;;		_lcd_4bit_send_command
  2120 ;; This function is called by:
  2121 ;;		_application_initialize
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text13
  2126   0014DA                     __ptext13:
  2127                           	callstack 0
  2128   0014DA                     _lcd_4bit_initialize:
  2129                           	callstack 26
  2130   0014DA                     
  2131                           ;ECU_Layer/LCD/lcd.c: 16:     uint8 l_counter= 0;
  2132   0014DA  0E00               	movlw	0
  2133   0014DC  6E43               	movwf	lcd_4bit_initialize@l_counter^0,c
  2134                           
  2135                           ;ECU_Layer/LCD/lcd.c: 17:     if(((void*)0) == lcd ){
  2136   0014DE  5041               	movf	lcd_4bit_initialize@lcd^0,w,c
  2137   0014E0  A4D8               	btfss	status,2,c
  2138   0014E2  EF75  F00A         	goto	u1131
  2139   0014E6  EF77  F00A         	goto	u1130
  2140   0014EA                     u1131:
  2141   0014EA  EF7B  F00A         	goto	l2048
  2142   0014EE                     u1130:
  2143   0014EE                     
  2144                           ;ECU_Layer/LCD/lcd.c: 18:          ret = (Std_ReturnType)0x00;
  2145   0014EE  0E00               	movlw	0
  2146   0014F0  6E44               	movwf	lcd_4bit_initialize@ret^0,c
  2147                           
  2148                           ;ECU_Layer/LCD/lcd.c: 19:     }
  2149   0014F2  EFD8  F00A         	goto	l2082
  2150   0014F6                     l2048:
  2151                           
  2152                           ;ECU_Layer/LCD/lcd.c: 21:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_e
      +                          n));
  2153   0014F6  2841               	incf	lcd_4bit_initialize@lcd^0,w,c
  2154   0014F8  6E3A               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  2155   0014FA  ECB3  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  2156   0014FE  6E44               	movwf	lcd_4bit_initialize@ret^0,c
  2157                           
  2158                           ;ECU_Layer/LCD/lcd.c: 22:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_r
      +                          s));
  2159   001500  C041  F03A         	movff	lcd_4bit_initialize@lcd,gpio_pin_direction_initialize_write@pin
  2160   001504  ECB3  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  2161   001508  6E44               	movwf	lcd_4bit_initialize@ret^0,c
  2162   00150A                     
  2163                           ;ECU_Layer/LCD/lcd.c: 24:         for (l_counter = 0; l_counter < 4;l_counter++){
  2164   00150A  0E00               	movlw	0
  2165   00150C  6E43               	movwf	lcd_4bit_initialize@l_counter^0,c
  2166   00150E                     l2056:
  2167   00150E  5041               	movf	lcd_4bit_initialize@lcd^0,w,c
  2168   001510  2443               	addwf	lcd_4bit_initialize@l_counter^0,w,c
  2169   001512  0F02               	addlw	2
  2170   001514  6E3A               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  2171   001516  ECB3  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  2172   00151A                     
  2173                           ;ECU_Layer/LCD/lcd.c: 26:         }
  2174   00151A  2A43               	incf	lcd_4bit_initialize@l_counter^0,f,c
  2175   00151C  0E03               	movlw	3
  2176   00151E  6443               	cpfsgt	lcd_4bit_initialize@l_counter^0,c
  2177   001520  EF94  F00A         	goto	u1141
  2178   001524  EF96  F00A         	goto	u1140
  2179   001528                     u1141:
  2180   001528  EF87  F00A         	goto	l2056
  2181   00152C                     u1140:
  2182   00152C                     
  2183                           ;ECU_Layer/LCD/lcd.c: 27:         _delay((unsigned long)((20)*(8000000/4000.0)));
  2184   00152C  0E34               	movlw	52
  2185   00152E  6E42               	movwf	??_lcd_4bit_initialize^0,c
  2186   001530  0EF2               	movlw	242
  2187   001532                     u1577:
  2188   001532  2EE8               	decfsz	wreg,f,c
  2189   001534  D7FE               	bra	u1577
  2190   001536  2E42               	decfsz	??_lcd_4bit_initialize^0,f,c
  2191   001538  D7FC               	bra	u1577
  2192   00153A  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2193   00153E  0E38               	movlw	56
  2194   001540  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2195   001542  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2196   001546                     
  2197                           ;ECU_Layer/LCD/lcd.c: 29:         _delay((unsigned long)((5)*(8000000/4000.0)));
  2198   001546  0E0D               	movlw	13
  2199   001548  6E42               	movwf	??_lcd_4bit_initialize^0,c
  2200   00154A  0EFC               	movlw	252
  2201   00154C                     u1587:
  2202   00154C  2EE8               	decfsz	wreg,f,c
  2203   00154E  D7FE               	bra	u1587
  2204   001550  2E42               	decfsz	??_lcd_4bit_initialize^0,f,c
  2205   001552  D7FC               	bra	u1587
  2206   001554  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2207   001558  0E38               	movlw	56
  2208   00155A  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2209   00155C  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2210   001560                     
  2211                           ;ECU_Layer/LCD/lcd.c: 31:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  2212   001560  0E64               	movlw	100
  2213   001562                     u1597:
  2214   001562  2EE8               	decfsz	wreg,f,c
  2215   001564  D7FE               	bra	u1597
  2216   001566  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2217   00156A  0E38               	movlw	56
  2218   00156C  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2219   00156E  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2220   001572  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2221   001576  0E01               	movlw	1
  2222   001578  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2223   00157A  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2224   00157E  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2225   001582  0E02               	movlw	2
  2226   001584  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2227   001586  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2228   00158A  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2229   00158E  0E06               	movlw	6
  2230   001590  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2231   001592  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2232   001596  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2233   00159A  0E0C               	movlw	12
  2234   00159C  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2235   00159E  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2236   0015A2                     
  2237                           ;ECU_Layer/LCD/lcd.c: 37:         ret = lcd_4bit_send_command(lcd , 0x28);
  2238   0015A2  C041  F03D         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2239   0015A6  0E28               	movlw	40
  2240   0015A8  6E3E               	movwf	lcd_4bit_send_command@command^0,c
  2241   0015AA  ECAB  F00C         	call	_lcd_4bit_send_command	;wreg free
  2242   0015AE  6E44               	movwf	lcd_4bit_initialize@ret^0,c
  2243   0015B0                     l2082:
  2244                           
  2245                           ;ECU_Layer/LCD/lcd.c: 39:     return ret;
  2246   0015B0  5044               	movf	lcd_4bit_initialize@ret^0,w,c
  2247   0015B2  0012               	return		;funcret
  2248   0015B4                     __end_of_lcd_4bit_initialize:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _lcd_4bit_send_command *****************
  2252 ;; Defined at:
  2253 ;;		line 42 in file "ECU_Layer/LCD/lcd.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  lcd             1   11[COMRAM] PTR const struct .
  2256 ;;		 -> lcd1(6), 
  2257 ;;  command         1   12[COMRAM] unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  ret             1   13[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      unsigned char 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;Total ram usage:        3 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 2
  2276 ;; This function calls:
  2277 ;;		_gpio_pin_write_logic
  2278 ;;		_lcd_4bits_send_enable_signal
  2279 ;;		_lcd_send_4bits
  2280 ;; This function is called by:
  2281 ;;		_lcd_4bit_initialize
  2282 ;;		_lcd_4bits_set_cursor
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text14
  2288   001956                     __ptext14:
  2289                           	callstack 0
  2290   001956                     _lcd_4bit_send_command:
  2291                           	callstack 26
  2292   001956                     
  2293                           ;ECU_Layer/LCD/lcd.c: 45:     if(((void*)0) == lcd ){
  2294   001956  503D               	movf	lcd_4bit_send_command@lcd^0,w,c
  2295   001958  A4D8               	btfss	status,2,c
  2296   00195A  EFB1  F00C         	goto	u1081
  2297   00195E  EFB3  F00C         	goto	u1080
  2298   001962                     u1081:
  2299   001962  EFB7  F00C         	goto	l2004
  2300   001966                     u1080:
  2301   001966                     
  2302                           ;ECU_Layer/LCD/lcd.c: 46:          ret = (Std_ReturnType)0x00;
  2303   001966  0E00               	movlw	0
  2304   001968  6E3F               	movwf	lcd_4bit_send_command@ret^0,c
  2305                           
  2306                           ;ECU_Layer/LCD/lcd.c: 47:     }
  2307   00196A  EFD7  F00C         	goto	l2006
  2308   00196E                     l2004:
  2309                           
  2310                           ;ECU_Layer/LCD/lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->lcd_rs) , LOW);
  2311   00196E  C03D  F032         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin
  2312   001972  0E00               	movlw	0
  2313   001974  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2314   001976  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2315   00197A  6E3F               	movwf	lcd_4bit_send_command@ret^0,c
  2316                           
  2317                           ;ECU_Layer/LCD/lcd.c: 51:         ret = lcd_send_4bits( lcd ,command >> 4);
  2318   00197C  C03D  F03A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2319   001980  383E               	swapf	lcd_4bit_send_command@command^0,w,c
  2320   001982  0B0F               	andlw	15
  2321   001984  6E3B               	movwf	lcd_send_4bits@data_command^0,c
  2322   001986  EC04  F00D         	call	_lcd_send_4bits	;wreg free
  2323   00198A  6E3F               	movwf	lcd_4bit_send_command@ret^0,c
  2324                           
  2325                           ;ECU_Layer/LCD/lcd.c: 52:         ret = lcd_4bits_send_enable_signal(lcd);
  2326   00198C  C03D  F03A         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2327   001990  ECAE  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  2328   001994  6E3F               	movwf	lcd_4bit_send_command@ret^0,c
  2329                           
  2330                           ;ECU_Layer/LCD/lcd.c: 53:         ret = lcd_send_4bits( lcd ,command);
  2331   001996  C03D  F03A         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2332   00199A  C03E  F03B         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  2333   00199E  EC04  F00D         	call	_lcd_send_4bits	;wreg free
  2334   0019A2  6E3F               	movwf	lcd_4bit_send_command@ret^0,c
  2335                           
  2336                           ;ECU_Layer/LCD/lcd.c: 54:         ret = lcd_4bits_send_enable_signal(lcd);
  2337   0019A4  C03D  F03A         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2338   0019A8  ECAE  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  2339   0019AC  6E3F               	movwf	lcd_4bit_send_command@ret^0,c
  2340   0019AE                     l2006:
  2341                           
  2342                           ;ECU_Layer/LCD/lcd.c: 56:     return ret;
  2343   0019AE  503F               	movf	lcd_4bit_send_command@ret^0,w,c
  2344   0019B0  0012               	return		;funcret
  2345   0019B2                     __end_of_lcd_4bit_send_command:
  2346                           	callstack 0
  2347                           
  2348 ;; *************** function _lcd_send_4bits *****************
  2349 ;; Defined at:
  2350 ;;		line 280 in file "ECU_Layer/LCD/lcd.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  lcd             1    8[COMRAM] PTR const struct .
  2353 ;;		 -> lcd1(6), 
  2354 ;;  data_command    1    9[COMRAM] unsigned char 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  ret             1   10[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      unsigned char 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        3 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 1
  2373 ;; This function calls:
  2374 ;;		_gpio_pin_write_logic
  2375 ;; This function is called by:
  2376 ;;		_lcd_4bit_send_command
  2377 ;;		_lcd_4bit_send_char_data
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text15
  2382   001A08                     __ptext15:
  2383                           	callstack 0
  2384   001A08                     _lcd_send_4bits:
  2385                           	callstack 26
  2386   001A08                     
  2387                           ;ECU_Layer/LCD/lcd.c: 283:     ret = gpio_pin_write_logic(&(lcd->lcd_pins[0]) , (data_co
      +                          mmand >> 0) & (uint8)0x01);
  2388   001A08  503A               	movf	lcd_send_4bits@lcd^0,w,c
  2389   001A0A  0F02               	addlw	2
  2390   001A0C  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2391   001A0E  503B               	movf	lcd_send_4bits@data_command^0,w,c
  2392   001A10  0B01               	andlw	1
  2393   001A12  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2394   001A14  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2395   001A18  6E3C               	movwf	lcd_send_4bits@ret^0,c
  2396   001A1A                     
  2397                           ;ECU_Layer/LCD/lcd.c: 284:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[1]) , (data_c
      +                          ommand >> 1) & (uint8)0x01);
  2398   001A1A  503A               	movf	lcd_send_4bits@lcd^0,w,c
  2399   001A1C  0F03               	addlw	3
  2400   001A1E  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2401   001A20  90D8               	bcf	status,0,c
  2402   001A22  303B               	rrcf	lcd_send_4bits@data_command^0,w,c
  2403   001A24  0B01               	andlw	1
  2404   001A26  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2405   001A28  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2406   001A2C  163C               	andwf	lcd_send_4bits@ret^0,f,c
  2407   001A2E                     
  2408                           ;ECU_Layer/LCD/lcd.c: 285:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[2]) , (data_c
      +                          ommand >> 2) & (uint8)0x01);
  2409   001A2E  503A               	movf	lcd_send_4bits@lcd^0,w,c
  2410   001A30  0F04               	addlw	4
  2411   001A32  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2412   001A34  403B               	rrncf	lcd_send_4bits@data_command^0,w,c
  2413   001A36  42E8               	rrncf	wreg,f,c
  2414   001A38  0B3F               	andlw	63
  2415   001A3A  0B01               	andlw	1
  2416   001A3C  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2417   001A3E  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2418   001A42  163C               	andwf	lcd_send_4bits@ret^0,f,c
  2419   001A44                     
  2420                           ;ECU_Layer/LCD/lcd.c: 286:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[3]) , (data_c
      +                          ommand >> 3) & (uint8)0x01);
  2421   001A44  503A               	movf	lcd_send_4bits@lcd^0,w,c
  2422   001A46  0F05               	addlw	5
  2423   001A48  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2424   001A4A  383B               	swapf	lcd_send_4bits@data_command^0,w,c
  2425   001A4C  46E8               	rlncf	wreg,f,c
  2426   001A4E  0B1F               	andlw	31
  2427   001A50  0B01               	andlw	1
  2428   001A52  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2429   001A54  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2430   001A58  163C               	andwf	lcd_send_4bits@ret^0,f,c
  2431                           
  2432                           ;ECU_Layer/LCD/lcd.c: 288:     return ret;
  2433   001A5A  503C               	movf	lcd_send_4bits@ret^0,w,c
  2434   001A5C  0012               	return		;funcret
  2435   001A5E                     __end_of_lcd_send_4bits:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2439 ;; Defined at:
  2440 ;;		line 291 in file "ECU_Layer/LCD/lcd.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  lcd             1    8[COMRAM] PTR const struct .
  2443 ;;		 -> lcd1(6), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  ret             1    9[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      unsigned char 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 1
  2462 ;; This function calls:
  2463 ;;		_gpio_pin_write_logic
  2464 ;; This function is called by:
  2465 ;;		_lcd_4bit_send_command
  2466 ;;		_lcd_4bit_send_char_data
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text16
  2471   001B5C                     __ptext16:
  2472                           	callstack 0
  2473   001B5C                     _lcd_4bits_send_enable_signal:
  2474                           	callstack 26
  2475   001B5C  283A               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2476   001B5E  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2477   001B60  0E01               	movlw	1
  2478   001B62  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2479   001B64  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2480   001B68                     
  2481                           ;ECU_Layer/LCD/lcd.c: 295:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  2482   001B68  0E03               	movlw	3
  2483   001B6A                     u1607:
  2484   001B6A  2EE8               	decfsz	wreg,f,c
  2485   001B6C  D7FE               	bra	u1607
  2486   001B6E  0000               	nop	
  2487   001B70                     
  2488                           ;ECU_Layer/LCD/lcd.c: 296:     ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  2489   001B70  283A               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2490   001B72  6E32               	movwf	gpio_pin_write_logic@pin^0,c
  2491   001B74  0E00               	movlw	0
  2492   001B76  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2493   001B78  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2494   001B7C  6E3B               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2495   001B7E                     
  2496                           ;ECU_Layer/LCD/lcd.c: 297:     return ret;
  2497   001B7E  503B               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  2498   001B80  0012               	return		;funcret
  2499   001B82                     __end_of_lcd_4bits_send_enable_signal:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _gpio_pin_direction_initialize_write *****************
  2503 ;; Defined at:
  2504 ;;		line 18 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  pin             1    8[COMRAM] PTR const struct .
  2507 ;;		 -> lcd2$lcd_pins(8), lcd2(10), lcd1$lcd_pins(4), lcd1(6), 
  2508 ;;		 -> relay_initialize@pin(1), 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  ret             1   14[COMRAM] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      unsigned char 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;Total ram usage:        7 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 1
  2527 ;; This function calls:
  2528 ;;		_gpio_pin_write_logic
  2529 ;; This function is called by:
  2530 ;;		_lcd_4bit_initialize
  2531 ;;		_lcd_8bit_initialize
  2532 ;;		_dc_motor_initialize
  2533 ;;		_relay_initialize
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text17
  2538   001166                     __ptext17:
  2539                           	callstack 0
  2540   001166                     _gpio_pin_direction_initialize_write:
  2541                           	callstack 27
  2542   001166                     
  2543                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     if(((void*)0) == pin || pin->pin > 7){
  2544   001166  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2545   001168  B4D8               	btfsc	status,2,c
  2546   00116A  EFB9  F008         	goto	u1021
  2547   00116E  EFBB  F008         	goto	u1020
  2548   001172                     u1021:
  2549   001172  EFCB  F008         	goto	l1980
  2550   001176                     u1020:
  2551   001176  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2552   001178  6ED9               	movwf	fsr2l,c
  2553   00117A  6ADA               	clrf	fsr2h,c
  2554   00117C  30DF               	rrcf	223,w,c
  2555   00117E  32E8               	rrcf	wreg,f,c
  2556   001180  32E8               	rrcf	wreg,f,c
  2557   001182  0B07               	andlw	7
  2558   001184  6E3B               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2559   001186  0E07               	movlw	7
  2560   001188  643B               	cpfsgt	??_gpio_pin_direction_initialize_write^0,c
  2561   00118A  EFC9  F008         	goto	u1031
  2562   00118E  EFCB  F008         	goto	u1030
  2563   001192                     u1031:
  2564   001192  EF24  F009         	goto	l1988
  2565   001196                     u1030:
  2566   001196                     l1980:
  2567                           
  2568                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:          ret = (Std_ReturnType)0x00;
  2569   001196  0E00               	movlw	0
  2570   001198  6E40               	movwf	gpio_pin_direction_initialize_write@ret^0,c
  2571                           
  2572                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  2573   00119A  EF50  F009         	goto	l1992
  2574   00119E                     l1982:
  2575                           
  2576                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:                 (*tris_registers[pin->port] &= ~(1 << p
      +                          in->pin));
  2577   00119E  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2578   0011A0  6ED9               	movwf	fsr2l,c
  2579   0011A2  6ADA               	clrf	fsr2h,c
  2580   0011A4  30DF               	rrcf	223,w,c
  2581   0011A6  32E8               	rrcf	wreg,f,c
  2582   0011A8  32E8               	rrcf	wreg,f,c
  2583   0011AA  0B07               	andlw	7
  2584   0011AC  6E3B               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2585   0011AE  0E01               	movlw	1
  2586   0011B0  6E3C               	movwf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2587   0011B2  2A3B               	incf	??_gpio_pin_direction_initialize_write^0,f,c
  2588   0011B4  EFDE  F008         	goto	u1044
  2589   0011B8                     u1045:
  2590   0011B8  90D8               	bcf	status,0,c
  2591   0011BA  363C               	rlcf	(??_gpio_pin_direction_initialize_write+1)^0,f,c
  2592   0011BC                     u1044:
  2593   0011BC  2E3B               	decfsz	??_gpio_pin_direction_initialize_write^0,f,c
  2594   0011BE  EFDC  F008         	goto	u1045
  2595   0011C2  503C               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2596   0011C4  0AFF               	xorlw	255
  2597   0011C6  6E3D               	movwf	(??_gpio_pin_direction_initialize_write+2)^0,c
  2598   0011C8  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2599   0011CA  6ED9               	movwf	fsr2l,c
  2600   0011CC  6ADA               	clrf	fsr2h,c
  2601   0011CE  50DF               	movf	223,w,c
  2602   0011D0  0B07               	andlw	7
  2603   0011D2  0D02               	mullw	2
  2604   0011D4  50F3               	movf	243,w,c
  2605   0011D6  0F15               	addlw	low _tris_registers
  2606   0011D8  6ED9               	movwf	fsr2l,c
  2607   0011DA  6ADA               	clrf	fsr2h,c
  2608   0011DC  CFDE F03E          	movff	postinc2,??_gpio_pin_direction_initialize_write+3
  2609   0011E0  CFDD F03F          	movff	postdec2,??_gpio_pin_direction_initialize_write+4
  2610   0011E4  C03E  FFD9         	movff	??_gpio_pin_direction_initialize_write+3,fsr2l
  2611   0011E8  C03F  FFDA         	movff	??_gpio_pin_direction_initialize_write+4,fsr2h
  2612   0011EC  503D               	movf	(??_gpio_pin_direction_initialize_write+2)^0,w,c
  2613   0011EE  16DF               	andwf	indf2,f,c
  2614                           
  2615                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:                 break;
  2616   0011F0  EF44  F009         	goto	l1990
  2617   0011F4                     l1984:
  2618                           
  2619                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[pin->port] |= (1 << pi
      +                          n->pin));
  2620   0011F4  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2621   0011F6  6ED9               	movwf	fsr2l,c
  2622   0011F8  6ADA               	clrf	fsr2h,c
  2623   0011FA  30DF               	rrcf	223,w,c
  2624   0011FC  32E8               	rrcf	wreg,f,c
  2625   0011FE  32E8               	rrcf	wreg,f,c
  2626   001200  0B07               	andlw	7
  2627   001202  6E3B               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2628   001204  0E01               	movlw	1
  2629   001206  6E3C               	movwf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2630   001208  2A3B               	incf	??_gpio_pin_direction_initialize_write^0,f,c
  2631   00120A  EF09  F009         	goto	u1054
  2632   00120E                     u1055:
  2633   00120E  90D8               	bcf	status,0,c
  2634   001210  363C               	rlcf	(??_gpio_pin_direction_initialize_write+1)^0,f,c
  2635   001212                     u1054:
  2636   001212  2E3B               	decfsz	??_gpio_pin_direction_initialize_write^0,f,c
  2637   001214  EF07  F009         	goto	u1055
  2638   001218  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2639   00121A  6ED9               	movwf	fsr2l,c
  2640   00121C  6ADA               	clrf	fsr2h,c
  2641   00121E  50DF               	movf	223,w,c
  2642   001220  0B07               	andlw	7
  2643   001222  0D02               	mullw	2
  2644   001224  50F3               	movf	243,w,c
  2645   001226  0F15               	addlw	low _tris_registers
  2646   001228  6ED9               	movwf	fsr2l,c
  2647   00122A  6ADA               	clrf	fsr2h,c
  2648   00122C  CFDE F03D          	movff	postinc2,??_gpio_pin_direction_initialize_write+2
  2649   001230  CFDD F03E          	movff	postdec2,??_gpio_pin_direction_initialize_write+3
  2650   001234  C03D  FFD9         	movff	??_gpio_pin_direction_initialize_write+2,fsr2l
  2651   001238  C03E  FFDA         	movff	??_gpio_pin_direction_initialize_write+3,fsr2h
  2652   00123C  503C               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2653   00123E  12DF               	iorwf	indf2,f,c
  2654                           
  2655                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
  2656   001240  EF44  F009         	goto	l1990
  2657   001244                     l1986:
  2658                           
  2659                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:         }
  2660   001244  EF44  F009         	goto	l1990
  2661   001248                     l1988:
  2662   001248  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2663   00124A  6ED9               	movwf	fsr2l,c
  2664   00124C  6ADA               	clrf	fsr2h,c
  2665   00124E  BCDF               	btfsc	indf2,6,c
  2666   001250  EF2C  F009         	goto	u1061
  2667   001254  EF2F  F009         	goto	u1060
  2668   001258                     u1061:
  2669   001258  0E01               	movlw	1
  2670   00125A  EF30  F009         	goto	u1070
  2671   00125E                     u1060:
  2672   00125E  0E00               	movlw	0
  2673   001260                     u1070:
  2674   001260  6E3B               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2675   001262  6A3C               	clrf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2676                           
  2677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2678                           ; Switch size 1, requested type "simple"
  2679                           ; Number of cases is 1, Range of values is 0 to 0
  2680                           ; switch strategies available:
  2681                           ; Name         Instructions Cycles
  2682                           ; simple_byte            4     3 (average)
  2683                           ;	Chosen strategy is simple_byte
  2684   001264  503C               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2685   001266  0A00               	xorlw	0	; case 0
  2686   001268  B4D8               	btfsc	status,2,c
  2687   00126A  EF39  F009         	goto	l2484
  2688   00126E  EF22  F009         	goto	l1986
  2689   001272                     l2484:
  2690                           
  2691                           ; Switch size 1, requested type "simple"
  2692                           ; Number of cases is 2, Range of values is 0 to 1
  2693                           ; switch strategies available:
  2694                           ; Name         Instructions Cycles
  2695                           ; simple_byte            7     4 (average)
  2696                           ;	Chosen strategy is simple_byte
  2697   001272  503B               	movf	??_gpio_pin_direction_initialize_write^0,w,c
  2698   001274  0A00               	xorlw	0	; case 0
  2699   001276  B4D8               	btfsc	status,2,c
  2700   001278  EFCF  F008         	goto	l1982
  2701   00127C  0A01               	xorlw	1	; case 1
  2702   00127E  B4D8               	btfsc	status,2,c
  2703   001280  EFFA  F008         	goto	l1984
  2704   001284  EF22  F009         	goto	l1986
  2705   001288                     l1990:
  2706                           
  2707                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:         ret = gpio_pin_write_logic(pin , pin->logic);
  2708   001288  C03A  F032         	movff	gpio_pin_direction_initialize_write@pin,gpio_pin_write_logic@pin
  2709   00128C  503A               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2710   00128E  6ED9               	movwf	fsr2l,c
  2711   001290  6ADA               	clrf	fsr2h,c
  2712   001292  0E00               	movlw	0
  2713   001294  BEDF               	btfsc	indf2,7,c
  2714   001296  0E01               	movlw	1
  2715   001298  6E33               	movwf	gpio_pin_write_logic@logic^0,c
  2716   00129A  ECE5  F009         	call	_gpio_pin_write_logic	;wreg free
  2717   00129E  6E40               	movwf	gpio_pin_direction_initialize_write@ret^0,c
  2718   0012A0                     l1992:
  2719                           
  2720                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:     return ret;
  2721   0012A0  5040               	movf	gpio_pin_direction_initialize_write@ret^0,w,c
  2722   0012A2  0012               	return		;funcret
  2723   0012A4                     __end_of_gpio_pin_direction_initialize_write:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _gpio_pin_write_logic *****************
  2727 ;; Defined at:
  2728 ;;		line 90 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  pin             1    0[COMRAM] PTR const struct .
  2731 ;;		 -> lcd2$lcd_pins(8), lcd2(10), lcd1$lcd_pins(4), lcd1(6), 
  2732 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_initialize@pin(1), led_turn_off@pin(1), 
  2733 ;;		 -> led_turn_on@pin(1), 
  2734 ;;  logic           1    1[COMRAM] enum E2808
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  ret             1    7[COMRAM] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      unsigned char 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;Total ram usage:        8 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_lcd_4bit_send_command
  2756 ;;		_lcd_4bit_send_char_data
  2757 ;;		_lcd_8bit_send_command
  2758 ;;		_lcd_send_4bits
  2759 ;;		_lcd_4bits_send_enable_signal
  2760 ;;		_lcd_8bits_send_enable_signal
  2761 ;;		_led_turn_on
  2762 ;;		_led_turn_off
  2763 ;;		_gpio_pin_direction_initialize_write
  2764 ;;		_dc_motor_move_left
  2765 ;;		_dc_motor_move_right
  2766 ;;		_dc_motor_stop
  2767 ;;		_lcd_8bit_send_char_data
  2768 ;;		_relay_turn_on
  2769 ;;		_relay_turn_off
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text18
  2774   0013CA                     __ptext18:
  2775                           	callstack 0
  2776   0013CA                     _gpio_pin_write_logic:
  2777                           	callstack 29
  2778   0013CA                     
  2779                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2780   0013CA  0E01               	movlw	1
  2781   0013CC  6E39               	movwf	gpio_pin_write_logic@ret^0,c
  2782                           
  2783                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     if(((void*)0) == pin || pin->pin > 7){
  2784   0013CE  5032               	movf	gpio_pin_write_logic@pin^0,w,c
  2785   0013D0  B4D8               	btfsc	status,2,c
  2786   0013D2  EFED  F009         	goto	u921
  2787   0013D6  EFEF  F009         	goto	u920
  2788   0013DA                     u921:
  2789   0013DA  EFFF  F009         	goto	l1900
  2790   0013DE                     u920:
  2791   0013DE  5032               	movf	gpio_pin_write_logic@pin^0,w,c
  2792   0013E0  6ED9               	movwf	fsr2l,c
  2793   0013E2  6ADA               	clrf	fsr2h,c
  2794   0013E4  30DF               	rrcf	223,w,c
  2795   0013E6  32E8               	rrcf	wreg,f,c
  2796   0013E8  32E8               	rrcf	wreg,f,c
  2797   0013EA  0B07               	andlw	7
  2798   0013EC  6E34               	movwf	??_gpio_pin_write_logic^0,c
  2799   0013EE  0E07               	movlw	7
  2800   0013F0  6434               	cpfsgt	??_gpio_pin_write_logic^0,c
  2801   0013F2  EFFD  F009         	goto	u931
  2802   0013F6  EFFF  F009         	goto	u930
  2803   0013FA                     u931:
  2804   0013FA  EF56  F00A         	goto	l1908
  2805   0013FE                     u930:
  2806   0013FE                     l1900:
  2807                           
  2808                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:         ret = (Std_ReturnType)0x00;
  2809   0013FE  0E00               	movlw	0
  2810   001400  6E39               	movwf	gpio_pin_write_logic@ret^0,c
  2811                           
  2812                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:     }
  2813   001402  EF6B  F00A         	goto	l1910
  2814   001406                     l1902:
  2815                           
  2816                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                 (*lat_registers[pin->port] &= ~(1 << pi
      +                          n->pin));
  2817   001406  5032               	movf	gpio_pin_write_logic@pin^0,w,c
  2818   001408  6ED9               	movwf	fsr2l,c
  2819   00140A  6ADA               	clrf	fsr2h,c
  2820   00140C  30DF               	rrcf	223,w,c
  2821   00140E  32E8               	rrcf	wreg,f,c
  2822   001410  32E8               	rrcf	wreg,f,c
  2823   001412  0B07               	andlw	7
  2824   001414  6E34               	movwf	??_gpio_pin_write_logic^0,c
  2825   001416  0E01               	movlw	1
  2826   001418  6E35               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2827   00141A  2A34               	incf	??_gpio_pin_write_logic^0,f,c
  2828   00141C  EF12  F00A         	goto	u944
  2829   001420                     u945:
  2830   001420  90D8               	bcf	status,0,c
  2831   001422  3635               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2832   001424                     u944:
  2833   001424  2E34               	decfsz	??_gpio_pin_write_logic^0,f,c
  2834   001426  EF10  F00A         	goto	u945
  2835   00142A  5035               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2836   00142C  0AFF               	xorlw	255
  2837   00142E  6E36               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2838   001430  5032               	movf	gpio_pin_write_logic@pin^0,w,c
  2839   001432  6ED9               	movwf	fsr2l,c
  2840   001434  6ADA               	clrf	fsr2h,c
  2841   001436  50DF               	movf	223,w,c
  2842   001438  0B07               	andlw	7
  2843   00143A  0D02               	mullw	2
  2844   00143C  50F3               	movf	243,w,c
  2845   00143E  0F0B               	addlw	low _lat_registers
  2846   001440  6ED9               	movwf	fsr2l,c
  2847   001442  6ADA               	clrf	fsr2h,c
  2848   001444  CFDE F037          	movff	postinc2,??_gpio_pin_write_logic+3
  2849   001448  CFDD F038          	movff	postdec2,??_gpio_pin_write_logic+4
  2850   00144C  C037  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2851   001450  C038  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2852   001454  5036               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2853   001456  16DF               	andwf	indf2,f,c
  2854                           
  2855                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                 break;
  2856   001458  EF6B  F00A         	goto	l1910
  2857   00145C                     l1904:
  2858                           
  2859                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 (*lat_registers[pin->port] |= (1 << pi
      +                          n->pin));
  2860   00145C  5032               	movf	gpio_pin_write_logic@pin^0,w,c
  2861   00145E  6ED9               	movwf	fsr2l,c
  2862   001460  6ADA               	clrf	fsr2h,c
  2863   001462  30DF               	rrcf	223,w,c
  2864   001464  32E8               	rrcf	wreg,f,c
  2865   001466  32E8               	rrcf	wreg,f,c
  2866   001468  0B07               	andlw	7
  2867   00146A  6E34               	movwf	??_gpio_pin_write_logic^0,c
  2868   00146C  0E01               	movlw	1
  2869   00146E  6E35               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2870   001470  2A34               	incf	??_gpio_pin_write_logic^0,f,c
  2871   001472  EF3D  F00A         	goto	u954
  2872   001476                     u955:
  2873   001476  90D8               	bcf	status,0,c
  2874   001478  3635               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2875   00147A                     u954:
  2876   00147A  2E34               	decfsz	??_gpio_pin_write_logic^0,f,c
  2877   00147C  EF3B  F00A         	goto	u955
  2878   001480  5032               	movf	gpio_pin_write_logic@pin^0,w,c
  2879   001482  6ED9               	movwf	fsr2l,c
  2880   001484  6ADA               	clrf	fsr2h,c
  2881   001486  50DF               	movf	223,w,c
  2882   001488  0B07               	andlw	7
  2883   00148A  0D02               	mullw	2
  2884   00148C  50F3               	movf	243,w,c
  2885   00148E  0F0B               	addlw	low _lat_registers
  2886   001490  6ED9               	movwf	fsr2l,c
  2887   001492  6ADA               	clrf	fsr2h,c
  2888   001494  CFDE F036          	movff	postinc2,??_gpio_pin_write_logic+2
  2889   001498  CFDD F037          	movff	postdec2,??_gpio_pin_write_logic+3
  2890   00149C  C036  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2891   0014A0  C037  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2892   0014A4  5035               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2893   0014A6  12DF               	iorwf	indf2,f,c
  2894                           
  2895                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 break;
  2896   0014A8  EF6B  F00A         	goto	l1910
  2897   0014AC                     l1908:
  2898   0014AC  5033               	movf	gpio_pin_write_logic@logic^0,w,c
  2899   0014AE  6E34               	movwf	??_gpio_pin_write_logic^0,c
  2900   0014B0  6A35               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2901                           
  2902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2903                           ; Switch size 1, requested type "simple"
  2904                           ; Number of cases is 1, Range of values is 0 to 0
  2905                           ; switch strategies available:
  2906                           ; Name         Instructions Cycles
  2907                           ; simple_byte            4     3 (average)
  2908                           ;	Chosen strategy is simple_byte
  2909   0014B2  5035               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2910   0014B4  0A00               	xorlw	0	; case 0
  2911   0014B6  B4D8               	btfsc	status,2,c
  2912   0014B8  EF60  F00A         	goto	l2486
  2913   0014BC  EFFF  F009         	goto	l1900
  2914   0014C0                     l2486:
  2915                           
  2916                           ; Switch size 1, requested type "simple"
  2917                           ; Number of cases is 2, Range of values is 0 to 1
  2918                           ; switch strategies available:
  2919                           ; Name         Instructions Cycles
  2920                           ; simple_byte            7     4 (average)
  2921                           ;	Chosen strategy is simple_byte
  2922   0014C0  5034               	movf	??_gpio_pin_write_logic^0,w,c
  2923   0014C2  0A00               	xorlw	0	; case 0
  2924   0014C4  B4D8               	btfsc	status,2,c
  2925   0014C6  EF03  F00A         	goto	l1902
  2926   0014CA  0A01               	xorlw	1	; case 1
  2927   0014CC  B4D8               	btfsc	status,2,c
  2928   0014CE  EF2E  F00A         	goto	l1904
  2929   0014D2  EFFF  F009         	goto	l1900
  2930   0014D6                     l1910:
  2931                           
  2932                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:     return ret;
  2933   0014D6  5039               	movf	gpio_pin_write_logic@ret^0,w,c
  2934   0014D8  0012               	return		;funcret
  2935   0014DA                     __end_of_gpio_pin_write_logic:
  2936                           	callstack 0
  2937                           
  2938                           	psect	rparam
  2939   000000                     
  2940                           	psect	config
  2941                           
  2942                           ; Padding undefined space
  2943   300000                     	org	3145728
  2944   300000  FF                 	db	255
  2945                           
  2946                           ;Config register CONFIG1H @ 0x300001
  2947                           ;	Oscillator Selection bits
  2948                           ;	OSC = HS, HS oscillator
  2949                           ;	Fail-Safe Clock Monitor Enable bit
  2950                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2951                           ;	Internal/External Oscillator Switchover bit
  2952                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2953   300001                     	org	3145729
  2954   300001  02                 	db	2
  2955                           
  2956                           ;Config register CONFIG2L @ 0x300002
  2957                           ;	Power-up Timer Enable bit
  2958                           ;	PWRT = OFF, PWRT disabled
  2959                           ;	Brown-out Reset Enable bits
  2960                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2961                           ;	Brown Out Reset Voltage bits
  2962                           ;	BORV = 1, 
  2963   300002                     	org	3145730
  2964   300002  09                 	db	9
  2965                           
  2966                           ;Config register CONFIG2H @ 0x300003
  2967                           ;	Watchdog Timer Enable bit
  2968                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2969                           ;	Watchdog Timer Postscale Select bits
  2970                           ;	WDTPS = 32768, 1:32768
  2971   300003                     	org	3145731
  2972   300003  1E                 	db	30
  2973                           
  2974                           ; Padding undefined space
  2975   300004                     	org	3145732
  2976   300004  FF                 	db	255
  2977                           
  2978                           ;Config register CONFIG3H @ 0x300005
  2979                           ;	CCP2 MUX bit
  2980                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2981                           ;	PORTB A/D Enable bit
  2982                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2983                           ;	Low-Power Timer1 Oscillator Enable bit
  2984                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2985                           ;	MCLR Pin Enable bit
  2986                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2987   300005                     	org	3145733
  2988   300005  81                 	db	129
  2989                           
  2990                           ;Config register CONFIG4L @ 0x300006
  2991                           ;	Stack Full/Underflow Reset Enable bit
  2992                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2993                           ;	Single-Supply ICSP Enable bit
  2994                           ;	LVP = OFF, Single-Supply ICSP disabled
  2995                           ;	Extended Instruction Set Enable bit
  2996                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2997                           ;	Background Debugger Enable bit
  2998                           ;	DEBUG = 0x1, unprogrammed default
  2999   300006                     	org	3145734
  3000   300006  81                 	db	129
  3001                           
  3002                           ; Padding undefined space
  3003   300007                     	org	3145735
  3004   300007  FF                 	db	255
  3005                           
  3006                           ;Config register CONFIG5L @ 0x300008
  3007                           ;	Code Protection bit
  3008                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3009                           ;	Code Protection bit
  3010                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3011                           ;	Code Protection bit
  3012                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3013                           ;	Code Protection bit
  3014                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3015   300008                     	org	3145736
  3016   300008  0F                 	db	15
  3017                           
  3018                           ;Config register CONFIG5H @ 0x300009
  3019                           ;	Boot Block Code Protection bit
  3020                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3021                           ;	Data EEPROM Code Protection bit
  3022                           ;	CPD = OFF, Data EEPROM not code-protected
  3023   300009                     	org	3145737
  3024   300009  C0                 	db	192
  3025                           
  3026                           ;Config register CONFIG6L @ 0x30000A
  3027                           ;	Write Protection bit
  3028                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3029                           ;	Write Protection bit
  3030                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3031                           ;	Write Protection bit
  3032                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3033                           ;	Write Protection bit
  3034                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3035   30000A                     	org	3145738
  3036   30000A  0F                 	db	15
  3037                           
  3038                           ;Config register CONFIG6H @ 0x30000B
  3039                           ;	Configuration Register Write Protection bit
  3040                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3041                           ;	Boot Block Write Protection bit
  3042                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3043                           ;	Data EEPROM Write Protection bit
  3044                           ;	WRTD = OFF, Data EEPROM not write-protected
  3045   30000B                     	org	3145739
  3046   30000B  E0                 	db	224
  3047                           
  3048                           ;Config register CONFIG7L @ 0x30000C
  3049                           ;	Table Read Protection bit
  3050                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3051                           ;	Table Read Protection bit
  3052                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3053                           ;	Table Read Protection bit
  3054                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3055                           ;	Table Read Protection bit
  3056                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3057   30000C                     	org	3145740
  3058   30000C  0F                 	db	15
  3059                           
  3060                           ;Config register CONFIG7H @ 0x30000D
  3061                           ;	Boot Block Table Read Protection bit
  3062                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3063   30000D                     	org	3145741
  3064   30000D  40                 	db	64
  3065                           tosu	equ	0xFFF
  3066                           tosh	equ	0xFFE
  3067                           tosl	equ	0xFFD
  3068                           stkptr	equ	0xFFC
  3069                           pclatu	equ	0xFFB
  3070                           pclath	equ	0xFFA
  3071                           pcl	equ	0xFF9
  3072                           tblptru	equ	0xFF8
  3073                           tblptrh	equ	0xFF7
  3074                           tblptrl	equ	0xFF6
  3075                           tablat	equ	0xFF5
  3076                           prodh	equ	0xFF4
  3077                           prodl	equ	0xFF3
  3078                           indf0	equ	0xFEF
  3079                           postinc0	equ	0xFEE
  3080                           postdec0	equ	0xFED
  3081                           preinc0	equ	0xFEC
  3082                           plusw0	equ	0xFEB
  3083                           fsr0h	equ	0xFEA
  3084                           fsr0l	equ	0xFE9
  3085                           wreg	equ	0xFE8
  3086                           indf1	equ	0xFE7
  3087                           postinc1	equ	0xFE6
  3088                           postdec1	equ	0xFE5
  3089                           preinc1	equ	0xFE4
  3090                           plusw1	equ	0xFE3
  3091                           fsr1h	equ	0xFE2
  3092                           fsr1l	equ	0xFE1
  3093                           bsr	equ	0xFE0
  3094                           indf2	equ	0xFDF
  3095                           postinc2	equ	0xFDE
  3096                           postdec2	equ	0xFDD
  3097                           preinc2	equ	0xFDC
  3098                           plusw2	equ	0xFDB
  3099                           fsr2h	equ	0xFDA
  3100                           fsr2l	equ	0xFD9
  3101                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        49
    BSS         9
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      87
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize@pin	PTR const struct . size(1) Largest target is 1
		 -> led_initialize@pin(COMRAM[1]), 

    gpio_pin_direction_initialize_write@pin	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_pins(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_pins(COMRAM[8]), 
		 -> relay_initialize@pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_pins(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_pins(COMRAM[8]), 
		 -> led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), relay_turn_off@pin(COMRAM[1]), 
		 -> relay_turn_on@pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string@data	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[13]), STR_2(CODE[14]), STR_3(CODE[11]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@data	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[13]), STR_2(CODE[14]), STR_3(CODE[11]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    led_initialize@led	PTR const struct . size(1) Largest target is 1
		 -> green(COMRAM[1]), red(COMRAM[1]), yellow(COMRAM[1]), 

    led_turn_off@led	PTR const struct . size(1) Largest target is 1
		 -> green(COMRAM[1]), red(COMRAM[1]), yellow(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(1) Largest target is 1
		 -> green(COMRAM[1]), red(COMRAM[1]), yellow(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_string_pos
    _led_turn_on->_gpio_pin_write_logic
    _led_turn_off->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_initialize->_lcd_8bit_initialize
    _led_initialize->_gpio_pin_direction_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bits_send_enable_signal
    _lcd_8bits_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_direction_initialize_write
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_direction_initialize_write->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   92684
                                             25 COMRAM     3     3      0
             _application_initialize
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          4     3      1    4351
                                              8 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         4     3      1    4352
                                              8 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   31277
                                             20 COMRAM     5     1      4
               _lcd_4bit_send_string
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 6     3      3   16311
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 3     1      2   13896
                                             14 COMRAM     3     1      2
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   13630
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   37028
                _lcd_4bit_initialize
                _lcd_8bit_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (2) _led_initialize                                       4     3      1     704
                                              7 COMRAM     4     3      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   15387
                                             16 COMRAM     4     3      1
_gpio_pin_direction_initialize_write
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   10079
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bits_send_enable_signal                         2     1      1    4200
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   20937
                                             15 COMRAM     4     3      1
_gpio_pin_direction_initialize_write
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   15606
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    4790
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         2     1      1    4352
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize_write                  7     6      1    4887
                                              8 COMRAM     7     6      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    3979
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _lcd_4bit_initialize
       _gpio_pin_direction_initialize_write
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bits_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_direction_initialize_write
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bits_send_enable_signal
           _gpio_pin_write_logic
     _led_initialize
       _gpio_pin_direction_initialize
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bits_send_enable_signal
         _lcd_send_4bits
     _lcd_4bits_set_cursor
       _lcd_4bit_send_command
   _led_turn_off
     _gpio_pin_write_logic
   _led_turn_on
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      57       1       68.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      57      39        0.0%
DATA                 0      0      57       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jun 01 17:38:48 2024

                            ?_lcd_send_4bits 003A                                           l80 19B0  
                                         l75 15B2                                           l85 1954  
                                         l98 1A06                                          l103 1A98  
                                        l200 172C                                          l122 17A2  
                                        l115 1680                                          l220 1816  
                                        l213 18F8                                          l223 1830  
                                        l216 17C0                                          l209 18A6  
                                        l170 1A5C                                          l227 1888  
                                        l173 1B80                                          l351 13C8  
                                        l176 1B5A                                          l370 14D8  
                                        l339 12A2                                          l444 115E  
                                        l289 1B02                                          u920 13DE  
                                        u921 13DA         __end_of_lcd_4bits_send_enable_signal 1B82  
               _lcd_4bits_send_enable_signal 1B5C                                          u930 13FE  
                                        u931 13FA                                          u944 1424  
                                        u960 12B8                                          u945 1420  
                                        u961 12B4                                          u954 147A  
                                        u970 12D8                                          u955 1476  
                                        u971 12D4                                          u984 12FE  
                                        u985 12FA                                          u994 1354  
                                        u995 1350                                          _red 0031  
                                        _ret 0057                          led_initialize@F2888 0056  
                                        wreg 0FE8                        relay_initialize@F2884 0052  
                               ?_led_turn_on 003A                                         l2000 1956  
                                       l2002 1966                                         l2010 18FA  
                                       l2004 196E                                         l2020 172E  
                                       l2012 190A                                         l2100 16DC  
                                       l2006 19AE                                         l2022 1742  
                                       l2014 1912                                         l2102 16F0  
                                       l2032 175A                                         l2040 17A0  
                                       l2024 174A                                         l2200 18DE  
                                       l2016 1952                                         l2120 19E8  
                                       l2112 19B2                                         l2104 172A  
                                       l2050 150A                                         l2034 1784  
                                       l2026 1756                                         l2130 15D0  
                                       l2202 18EE                                         l2122 1A04  
                                       l2114 19C6                                         l2210 1A6E  
                                       l2060 151C                                         l2044 14DA  
                                       l2036 1786                                         l2140 15F4  
                                       l2132 15E4                                         l2204 18F6  
                                       l2116 19CE                                         l2212 1A76  
                                       l2070 1566                                         l2062 152C  
                                       l2046 14EE                                         l2038 1796  
                                       l2150 163A                                         l2142 15F6  
                                       l2126 15B4                                         l2118 19E6  
                                       l2214 1A88                                         l2080 15A2  
                                       l2072 1572                                         l2064 153A  
                                       l2056 150E                                         l2048 14F6  
                                       l2160 1670                                         l2152 1640  
                                       l2144 1606                                         l2128 15C8  
                                       l2216 1A96                                         l2208 1A5E  
                                       l2240 17C4                                         l2074 157E  
                                       l2066 1546                                         l2058 151A  
                                       l2082 15B0                                         l2154 164C  
                                       l2146 1614                                         l2138 15E8  
                                       l2162 167E                                         l2090 1688  
                                       l2242 17F6                                         l2076 158A  
                                       l2068 1560                                         l2156 1658  
                                       l2148 1620                                         l2092 1698  
                                       l2260 1868                                         l2252 1818  
                                       l2244 17F8                                         l2236 17A4  
                                       l2078 1596                                         l2158 1664  
                                       l2094 16A0                                         l2086 1682  
                                       l2262 1878                                         l2254 1828  
                                       l2246 1808                                         l2238 17B8  
                                       l2430 1040                                         l2192 188A  
                                       l2096 16B4                                         l2088 1686  
                                       l2256 1834                                         l2264 1886  
                                       l2248 1814                                         l2432 1058  
                                       l2440 1094                                         l2424 1028  
                                       l2194 189E                                         l2098 16C8  
                                       l2258 1866                                         l2442 10A4  
                                       l2434 106E                                         l2426 102C  
                                       l1900 13FE                                         l2196 18AA  
                                       l2268 1AD0                                         l2460 1150  
                                       l2444 10BC                                         l2452 10F8  
                                       l2436 1084                                         l2428 1030  
                                       l1902 1406                                         l1910 14D6  
                                       l2198 18DC                                         l2454 110A  
                                       l2446 10D2                                         l2438 108E  
                                       l1904 145C                                         l1920 1A08  
                                       l2480 1704                                         l2456 1122  
                                       l2448 10EA                                         l1930 1B5C  
                                       l1922 1A1A                                         l2482 13B0  
                                       l2458 1138                                         l1908 14AC  
                                       l2484 1272                                         l1932 1B5C  
                                       l1924 1A2E                                         l2486 14C0  
                                       l1934 1B68                                         l1926 1A44  
                                       l1918 1A08                                         l1950 1B58  
                                       l1942 1B36                                         l1936 1B70  
                                       l1944 1B36                                         l1960 12E0  
                                       l1938 1B7E                                         l1946 1B42  
                                       l1962 1336                                         l1954 12A4  
                                       l1980 1196                                         l1948 1B4A  
                                       l1956 12B8                                         l1990 1288  
                                       l1982 119E                                         l1966 1386  
                                       l1958 12D8                                         l1896 13CA  
                                       l1984 11F4                                         l1992 12A0  
                                       l1976 1166                                         l1968 13C6  
                                       l1898 13DE                                         l1986 1244  
                                       l1978 1176                                         l1988 1248  
                                       STR_1 100F                                         STR_2 1001  
                                       STR_3 101C                                         u1000 139C  
                                       u1001 1396                                         u1010 139E  
                                       u1020 1176                                         u1100 1742  
                                       u1021 1172                                         u1101 173E  
                                       u1030 1196                                         u1031 1192  
                                       u1120 1796                                         u1121 1792  
                                       u1130 14EE                                         u1114 1774  
                                       u1131 14EA                                         u1115 1770  
                                       u1060 125E                                         u1044 11BC  
                                       u1140 152C                                         u1300 1828  
                                       u1061 1258                                         u1045 11B8  
                                       u1141 1528                                         u1301 1824  
                                       u1070 1260                                         u1054 1212  
                                       u1230 189E                                         u1150 1698  
                                       u1055 120E                                         u1231 189A  
                                       u1151 1694                                         u1080 1966  
                                       u1160 19C6           lcd_8bit_send_command@l_pin_counter 0041  
                                       u1081 1962                                         u1161 19C2  
                                       u1090 190A                                         u1170 1A04  
                                       u1250 1A6E                                         u1091 1906  
                                       u1171 1A00                                         u1251 1A6A  
                                       u1315 1876                                         u1180 15C8  
                                       u1181 15C4                                         u1245 18EC  
                                       u1317 1878                                         _LATA 0F89  
                                       u1190 1606                                         _LATB 0F8A  
                                       u1191 1602                                         u1247 18EE  
                                       _LATC 0F8B                                         u1280 17B8  
                                       _LATD 0F8C                                         u1281 17B4  
                                       _LATE 0F8D                                         u1507 1078  
                                       u1517 10DC                                         u1470 1040  
                                       u1607 1B6A                                         u1295 1806  
                                       u1527 1142                                         u1471 103C  
                                       u1480 10A4                                         u1537 160C  
                                       u1297 1808                                         u1481 10A0  
                                       u1490 110A                                         u1547 1626  
                                       u1491 1106                                         u1557 163C  
                                       u1567 1B44                                         u1577 1532  
                                       u1587 154C                                         u1597 1562  
                       _lcd_4bit_send_string 19B2                                         _lcd1 0029  
                                       _lcd2 001F                                         _main 1028  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                     __end_of_led_initialize 18FA                                  main@program 004D  
                                       prodl 0FF3                                         start 0000  
                              ?_led_turn_off 003A                __end_of_lcd_8bit_send_command 17A4  
                               ___param_bank 0000                        _lcd_4bit_send_command 1956  
               lcd_4bit_send_string_pos@data 0049                         _gpio_pin_write_logic 13CA  
             lcd_4bit_send_string_pos@column 0048                                        ?_main 0032  
                   ??_application_initialize 0046                          relay_turn_off@F2894 0050  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
              ?_lcd_4bits_send_enable_signal 003A                                        _green 0030  
                      ?_lcd_4bit_send_string 0040                                        tablat 0FF5  
                                      status 0FD8                              ?_led_initialize 0039  
                             ??_led_turn_off 003B               ?_gpio_pin_direction_initialize 0032  
                            __initialization 1A9A                                 __end_of_main 1166  
                      ?_gpio_pin_write_logic 0032                                _lat_registers 000B  
                                     ??_main 004B                                __activetblptr 0002  
                           led_turn_on@F2893 0055             __end_of_lcd_4bit_send_string_pos 1A9A  
                     ?_lcd_4bit_send_command 003D                                       clear_0 1AC0  
                                     isa$std 0001                                       _yellow 002F  
                               __pdataCOMRAM 0001                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                 lcd_8bit_initialize@l_counter 0044  
                     ??_lcd_4bit_send_string 0042              lcd_8bits_send_enable_signal@lcd 003A  
            lcd_8bits_send_enable_signal@ret 003B                                   __accesstop 0080  
                    __end_of__initialization 1AC6                   lcd_4bits_set_cursor@column 0042  
                              ___rparam_used 0001                             ??_lcd_send_4bits 003C  
                          led_initialize@led 0039                            led_initialize@pin 003C  
                          led_initialize@ret 003B                      _lcd_4bit_send_char_data 18FA  
                     ??_gpio_pin_write_logic 0034                               __pcstackCOMRAM 0032  
                   lcd_4bit_send_command@lcd 003D                     lcd_4bit_send_command@ret 003F  
                       __end_of_led_turn_off 188A                      lcd_4bit_send_string@lcd 0040  
                    lcd_4bit_send_string@ret 0042                       _application_initialize 1AD0  
            lcd_4bits_send_enable_signal@lcd 003A                                   __pnvCOMRAM 0057  
               __end_of_lcd_4bits_set_cursor 172E              lcd_4bits_send_enable_signal@ret 003B  
                     lcd_8bit_initialize@lcd 0042                       lcd_8bit_initialize@ret 0045  
             ??_lcd_8bits_send_enable_signal 003B                            led_turn_off@F2898 0054  
                            led_toggle@F2903 0053                    ?_lcd_4bit_send_string_pos 0046  
                           ??_led_initialize 003A                               _tris_registers 0015  
                  ??_lcd_4bit_send_char_data 003F                                      __Hparam 0000  
                                    __Lparam 0000                        _lcd_8bit_send_command 172E  
                               __psmallconst 1000                                      __pcinit 1A9A  
                                    __ramtop 1000                                      __ptext0 1028  
                                    __ptext1 17A4                                      __ptext2 1818  
                                    __ptext3 1A5E                                      __ptext4 1682  
                                    __ptext5 19B2                                      __ptext6 18FA  
                                    __ptext7 1AD0                                      __ptext8 188A  
                                    __ptext9 12A4              ??_gpio_pin_direction_initialize 0033  
                    lcd_4bits_set_cursor@lcd 0040                      lcd_4bits_set_cursor@ret 0045  
                    lcd_4bits_set_cursor@row 0041                         end_of_initialization 1AC6  
                          lcd_send_4bits@lcd 003A                            lcd_send_4bits@ret 003C  
                              __Lmediumconst 0000                      ??_lcd_4bit_send_command 003F  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc2 0FDE  
                        _lcd_4bit_initialize 14DA              __end_of_lcd_4bit_send_char_data 1956  
                       _lcd_4bits_set_cursor 1682                   lcd_4bit_send_char_data@lcd 003D  
                 lcd_4bit_send_char_data@ret 003F                         ?_lcd_4bit_initialize 0041  
                               _led_turn_off 1818                       ?_lcd_8bit_send_command 003C  
                         relay_turn_on@F2889 0051                            relay_toggle@F2899 004F  
                lcd_4bit_send_string_pos@lcd 0046                  lcd_4bit_send_string_pos@ret 004A  
                lcd_4bit_send_string_pos@row 0047                                __pidataCOMRAM 1B04  
                      ?_lcd_4bits_set_cursor 0040                          start_initialization 1A9A  
                              ??_led_turn_on 003B                          _lcd_8bit_initialize 15B4  
      __end_of_gpio_pin_direction_initialize 13CA                _gpio_pin_direction_initialize 12A4  
                    ?_application_initialize 0032                        ??_lcd_4bit_initialize 0042  
                            led_turn_off@led 003A                              led_turn_off@pin 003D  
                            led_turn_off@ret 003C                         ?_lcd_8bit_initialize 0042  
                   lcd_4bit_send_string@data 0041                 lcd_4bit_send_command@command 003E  
                   lcd_8bit_send_command@lcd 003C                     lcd_8bit_send_command@ret 0040  
                                __pbssCOMRAM 004E               __end_of_application_initialize 1B04  
                        __end_of_led_turn_on 1818               ??_lcd_4bits_send_enable_signal 003B  
                      ??_lcd_8bit_initialize 0043                    gpio_pin_write_logic@logic 0033  
                     ??_lcd_4bits_set_cursor 0043                                  __smallconst 1000  
       __end_of_lcd_8bits_send_enable_signal 1B5C                 _lcd_8bits_send_enable_signal 1B36  
                 lcd_send_4bits@data_command 003B                                  _lcd_counter 004E  
              __end_of_lcd_4bit_send_command 19B2             gpio_pin_direction_initialize@pin 0032  
           gpio_pin_direction_initialize@ret 0038  __end_of_gpio_pin_direction_initialize_write 12A4  
      ??_gpio_pin_direction_initialize_write 003B         ?_gpio_pin_direction_initialize_write 003A  
        _gpio_pin_direction_initialize_write 1166                     _lcd_4bit_send_string_pos 1A5E  
                                _led_turn_on 17A4                      gpio_pin_write_logic@pin 0032  
                    gpio_pin_write_logic@ret 0039                     ?_lcd_4bit_send_char_data 003D  
                                  copy_data0 1AAE                ?_lcd_8bits_send_enable_signal 003A  
                    ??_lcd_8bit_send_command 003E                               led_turn_on@led 003A  
                             led_turn_on@pin 003D                               led_turn_on@ret 003C  
                                   __Hrparam 0000                                     __Lrparam 0000  
                                   __ptext10 15B4                                     __ptext11 172E  
                                   __ptext12 1B36                                     __ptext13 14DA  
                                   __ptext14 1956                                     __ptext15 1A08  
                                   __ptext16 1B5C                                     __ptext17 1166  
                                   __ptext18 13CA                                     isa$xinst 0000  
               lcd_4bit_initialize@l_counter 0043                 __end_of_lcd_4bit_send_string 1A08  
                             _lcd_send_4bits 1A08       gpio_pin_direction_initialize_write@pin 003A  
     gpio_pin_direction_initialize_write@ret 0040                  __end_of_lcd_4bit_initialize 15B4  
               __end_of_gpio_pin_write_logic 14DA                       __end_of_lcd_send_4bits 1A5E  
                             _port_registers 0001                  __end_of_lcd_8bit_initialize 1682  
               lcd_8bit_send_command@command 003D                  lcd_4bit_send_char_data@data 003E  
                 ??_lcd_4bit_send_string_pos 004A                               _led_initialize 188A  
                     lcd_4bit_initialize@lcd 0041                       lcd_4bit_initialize@ret 0044  
